/*
 * generated by Xtext 2.25.0
 */
grammar InternalVformDSL;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package cafeV.dsl.vforms.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package cafeV.dsl.vforms.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import cafeV.dsl.vforms.services.VformDSLGrammarAccess;

}

@parser::members {

 	private VformDSLGrammarAccess grammarAccess;

    public InternalVformDSLParser(TokenStream input, VformDSLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected VformDSLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='formLayout'
			{
				newLeafNode(otherlv_0, grammarAccess.getModelAccess().getFormLayoutKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getFormLayoutFormLayoutParserRuleCall_0_1_0());
					}
					lv_formLayout_1_0=ruleFormLayout
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						set(
							$current,
							"formLayout",
							lv_formLayout_1_0,
							"cafeV.dsl.vforms.VformDSL.FormLayout");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_2='formInputs'
		{
			newLeafNode(otherlv_2, grammarAccess.getModelAccess().getFormInputsKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getFormInputFormInputParserRuleCall_2_0());
				}
				lv_formInput_3_0=ruleFormInput
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"formInput",
						lv_formInput_3_0,
						"cafeV.dsl.vforms.VformDSL.FormInput");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFormInput
entryRuleFormInput returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFormInputRule()); }
	iv_ruleFormInput=ruleFormInput
	{ $current=$iv_ruleFormInput.current; }
	EOF;

// Rule FormInput
ruleFormInput returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFormInputAccess().getTextTextParserRuleCall_0_0());
				}
				lv_text_0_0=ruleText
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFormInputRule());
					}
					add(
						$current,
						"text",
						lv_text_0_0,
						"cafeV.dsl.vforms.VformDSL.Text");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getFormInputAccess().getCheckboxCheckboxParserRuleCall_1_0());
				}
				lv_checkbox_1_0=ruleCheckbox
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFormInputRule());
					}
					add(
						$current,
						"checkbox",
						lv_checkbox_1_0,
						"cafeV.dsl.vforms.VformDSL.Checkbox");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getFormInputAccess().getNumberNumberParserRuleCall_2_0());
				}
				lv_number_2_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFormInputRule());
					}
					add(
						$current,
						"number",
						lv_number_2_0,
						"cafeV.dsl.vforms.VformDSL.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getFormInputAccess().getDatDatParserRuleCall_3_0());
				}
				lv_dat_3_0=ruleDat
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFormInputRule());
					}
					add(
						$current,
						"dat",
						lv_dat_3_0,
						"cafeV.dsl.vforms.VformDSL.Dat");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getFormInputAccess().getRangeRangeParserRuleCall_4_0());
				}
				lv_range_4_0=ruleRange
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFormInputRule());
					}
					add(
						$current,
						"range",
						lv_range_4_0,
						"cafeV.dsl.vforms.VformDSL.Range");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getFormInputAccess().getSelectSelectParserRuleCall_5_0());
				}
				lv_select_5_0=ruleSelect
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFormInputRule());
					}
					add(
						$current,
						"select",
						lv_select_5_0,
						"cafeV.dsl.vforms.VformDSL.Select");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)*
;

// Entry rule entryRuleFormLayout
entryRuleFormLayout returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFormLayoutRule()); }
	iv_ruleFormLayout=ruleFormLayout
	{ $current=$iv_ruleFormLayout.current; }
	EOF;

// Rule FormLayout
ruleFormLayout returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getFormLayoutAccess().getLayoutLayoutEnumRuleCall_0());
			}
			lv_layout_0_0=ruleLayout
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getFormLayoutRule());
				}
				set(
					$current,
					"layout",
					lv_layout_0_0,
					"cafeV.dsl.vforms.VformDSL.Layout");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleText
entryRuleText returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTextRule()); }
	iv_ruleText=ruleText
	{ $current=$iv_ruleText.current; }
	EOF;

// Rule Text
ruleText returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='inputType'
		{
			newLeafNode(otherlv_0, grammarAccess.getTextAccess().getInputTypeKeyword_0());
		}
		otherlv_1='text'
		{
			newLeafNode(otherlv_1, grammarAccess.getTextAccess().getTextKeyword_1());
		}
		otherlv_2='inputName'
		{
			newLeafNode(otherlv_2, grammarAccess.getTextAccess().getInputNameKeyword_2());
		}
		(
			(
				lv_inputName_3_0=RULE_STRING
				{
					newLeafNode(lv_inputName_3_0, grammarAccess.getTextAccess().getInputNameSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTextRule());
					}
					setWithLastConsumed(
						$current,
						"inputName",
						lv_inputName_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleCheckbox
entryRuleCheckbox returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCheckboxRule()); }
	iv_ruleCheckbox=ruleCheckbox
	{ $current=$iv_ruleCheckbox.current; }
	EOF;

// Rule Checkbox
ruleCheckbox returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='inputType'
		{
			newLeafNode(otherlv_0, grammarAccess.getCheckboxAccess().getInputTypeKeyword_0());
		}
		otherlv_1='checkbox'
		{
			newLeafNode(otherlv_1, grammarAccess.getCheckboxAccess().getCheckboxKeyword_1());
		}
		otherlv_2='inputName'
		{
			newLeafNode(otherlv_2, grammarAccess.getCheckboxAccess().getInputNameKeyword_2());
		}
		(
			(
				lv_inputName_3_0=RULE_STRING
				{
					newLeafNode(lv_inputName_3_0, grammarAccess.getCheckboxAccess().getInputNameSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCheckboxRule());
					}
					setWithLastConsumed(
						$current,
						"inputName",
						lv_inputName_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleNumber
entryRuleNumber returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumberRule()); }
	iv_ruleNumber=ruleNumber
	{ $current=$iv_ruleNumber.current; }
	EOF;

// Rule Number
ruleNumber returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='inputType'
		{
			newLeafNode(otherlv_0, grammarAccess.getNumberAccess().getInputTypeKeyword_0());
		}
		otherlv_1='number'
		{
			newLeafNode(otherlv_1, grammarAccess.getNumberAccess().getNumberKeyword_1());
		}
		otherlv_2='inputName'
		{
			newLeafNode(otherlv_2, grammarAccess.getNumberAccess().getInputNameKeyword_2());
		}
		(
			(
				lv_inputName_3_0=RULE_STRING
				{
					newLeafNode(lv_inputName_3_0, grammarAccess.getNumberAccess().getInputNameSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNumberRule());
					}
					setWithLastConsumed(
						$current,
						"inputName",
						lv_inputName_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleDat
entryRuleDat returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDatRule()); }
	iv_ruleDat=ruleDat
	{ $current=$iv_ruleDat.current; }
	EOF;

// Rule Dat
ruleDat returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='inputType'
		{
			newLeafNode(otherlv_0, grammarAccess.getDatAccess().getInputTypeKeyword_0());
		}
		otherlv_1='date'
		{
			newLeafNode(otherlv_1, grammarAccess.getDatAccess().getDateKeyword_1());
		}
		otherlv_2='inputName'
		{
			newLeafNode(otherlv_2, grammarAccess.getDatAccess().getInputNameKeyword_2());
		}
		(
			(
				lv_inputName_3_0=RULE_STRING
				{
					newLeafNode(lv_inputName_3_0, grammarAccess.getDatAccess().getInputNameSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDatRule());
					}
					setWithLastConsumed(
						$current,
						"inputName",
						lv_inputName_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleRange
entryRuleRange returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRangeRule()); }
	iv_ruleRange=ruleRange
	{ $current=$iv_ruleRange.current; }
	EOF;

// Rule Range
ruleRange returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='inputType'
		{
			newLeafNode(otherlv_0, grammarAccess.getRangeAccess().getInputTypeKeyword_0());
		}
		otherlv_1='range'
		{
			newLeafNode(otherlv_1, grammarAccess.getRangeAccess().getRangeKeyword_1());
		}
		otherlv_2='inputName'
		{
			newLeafNode(otherlv_2, grammarAccess.getRangeAccess().getInputNameKeyword_2());
		}
		(
			(
				lv_inputName_3_0=RULE_STRING
				{
					newLeafNode(lv_inputName_3_0, grammarAccess.getRangeAccess().getInputNameSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRangeRule());
					}
					setWithLastConsumed(
						$current,
						"inputName",
						lv_inputName_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_4='min'
		{
			newLeafNode(otherlv_4, grammarAccess.getRangeAccess().getMinKeyword_4());
		}
		(
			(
				lv_min_5_0=RULE_INT
				{
					newLeafNode(lv_min_5_0, grammarAccess.getRangeAccess().getMinINTTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRangeRule());
					}
					setWithLastConsumed(
						$current,
						"min",
						lv_min_5_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_6='max'
		{
			newLeafNode(otherlv_6, grammarAccess.getRangeAccess().getMaxKeyword_6());
		}
		(
			(
				lv_max_7_0=RULE_INT
				{
					newLeafNode(lv_max_7_0, grammarAccess.getRangeAccess().getMaxINTTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRangeRule());
					}
					setWithLastConsumed(
						$current,
						"max",
						lv_max_7_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleSelect
entryRuleSelect returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectRule()); }
	iv_ruleSelect=ruleSelect
	{ $current=$iv_ruleSelect.current; }
	EOF;

// Rule Select
ruleSelect returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='inputType'
		{
			newLeafNode(otherlv_0, grammarAccess.getSelectAccess().getInputTypeKeyword_0());
		}
		otherlv_1='select'
		{
			newLeafNode(otherlv_1, grammarAccess.getSelectAccess().getSelectKeyword_1());
		}
		otherlv_2='inputName'
		{
			newLeafNode(otherlv_2, grammarAccess.getSelectAccess().getInputNameKeyword_2());
		}
		(
			(
				lv_inputName_3_0=RULE_STRING
				{
					newLeafNode(lv_inputName_3_0, grammarAccess.getSelectAccess().getInputNameSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSelectRule());
					}
					setWithLastConsumed(
						$current,
						"inputName",
						lv_inputName_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_4='options'
		{
			newLeafNode(otherlv_4, grammarAccess.getSelectAccess().getOptionsKeyword_4());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectAccess().getDataOptionDataOptionParserRuleCall_5_0_0());
					}
					lv_dataOption_5_0=ruleDataOption
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectRule());
						}
						set(
							$current,
							"dataOption",
							lv_dataOption_5_0,
							"cafeV.dsl.vforms.VformDSL.DataOption");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectAccess().getNumberOptionNumberOptionParserRuleCall_5_1_0());
					}
					lv_numberOption_6_0=ruleNumberOption
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectRule());
						}
						set(
							$current,
							"numberOption",
							lv_numberOption_6_0,
							"cafeV.dsl.vforms.VformDSL.NumberOption");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectAccess().getEnumOptionEnumOptionParserRuleCall_5_2_0());
					}
					lv_enumOption_7_0=ruleEnumOption
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectRule());
						}
						set(
							$current,
							"enumOption",
							lv_enumOption_7_0,
							"cafeV.dsl.vforms.VformDSL.EnumOption");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleDataOption
entryRuleDataOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataOptionRule()); }
	iv_ruleDataOption=ruleDataOption
	{ $current=$iv_ruleDataOption.current; }
	EOF;

// Rule DataOption
ruleDataOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='optionType'
		{
			newLeafNode(otherlv_0, grammarAccess.getDataOptionAccess().getOptionTypeKeyword_0());
		}
		otherlv_1='data'
		{
			newLeafNode(otherlv_1, grammarAccess.getDataOptionAccess().getDataKeyword_1());
		}
		otherlv_2='data'
		{
			newLeafNode(otherlv_2, grammarAccess.getDataOptionAccess().getDataKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataOptionAccess().getDataDataParserRuleCall_3_0());
				}
				lv_data_3_0=ruleData
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataOptionRule());
					}
					add(
						$current,
						"data",
						lv_data_3_0,
						"cafeV.dsl.vforms.VformDSL.Data");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleData
entryRuleData returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataRule()); }
	iv_ruleData=ruleData
	{ $current=$iv_ruleData.current; }
	EOF;

// Rule Data
ruleData returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='label'
			{
				newLeafNode(otherlv_0, grammarAccess.getDataAccess().getLabelKeyword_0_0());
			}
			(
				(
					lv_label_1_0=RULE_STRING
					{
						newLeafNode(lv_label_1_0, grammarAccess.getDataAccess().getLabelSTRINGTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataRule());
						}
						setWithLastConsumed(
							$current,
							"label",
							lv_label_1_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			otherlv_2='value'
			{
				newLeafNode(otherlv_2, grammarAccess.getDataAccess().getValueKeyword_0_2());
			}
			(
				(
					lv_strVal_3_0=RULE_STRING
					{
						newLeafNode(lv_strVal_3_0, grammarAccess.getDataAccess().getStrValSTRINGTerminalRuleCall_0_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataRule());
						}
						setWithLastConsumed(
							$current,
							"strVal",
							lv_strVal_3_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
		    |
		(
			(
				lv_intVal_4_0=RULE_INT
				{
					newLeafNode(lv_intVal_4_0, grammarAccess.getDataAccess().getIntValINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataRule());
					}
					setWithLastConsumed(
						$current,
						"intVal",
						lv_intVal_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleNumberOption
entryRuleNumberOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumberOptionRule()); }
	iv_ruleNumberOption=ruleNumberOption
	{ $current=$iv_ruleNumberOption.current; }
	EOF;

// Rule NumberOption
ruleNumberOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='optionType'
		{
			newLeafNode(otherlv_0, grammarAccess.getNumberOptionAccess().getOptionTypeKeyword_0());
		}
		otherlv_1='number'
		{
			newLeafNode(otherlv_1, grammarAccess.getNumberOptionAccess().getNumberKeyword_1());
		}
		otherlv_2='min'
		{
			newLeafNode(otherlv_2, grammarAccess.getNumberOptionAccess().getMinKeyword_2());
		}
		(
			(
				lv_min_3_0=RULE_INT
				{
					newLeafNode(lv_min_3_0, grammarAccess.getNumberOptionAccess().getMinINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNumberOptionRule());
					}
					setWithLastConsumed(
						$current,
						"min",
						lv_min_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_4='max'
		{
			newLeafNode(otherlv_4, grammarAccess.getNumberOptionAccess().getMaxKeyword_4());
		}
		(
			(
				lv_max_5_0=RULE_INT
				{
					newLeafNode(lv_max_5_0, grammarAccess.getNumberOptionAccess().getMaxINTTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNumberOptionRule());
					}
					setWithLastConsumed(
						$current,
						"max",
						lv_max_5_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_6='range'
		{
			newLeafNode(otherlv_6, grammarAccess.getNumberOptionAccess().getRangeKeyword_6());
		}
		(
			(
				lv_range_7_0=RULE_INT
				{
					newLeafNode(lv_range_7_0, grammarAccess.getNumberOptionAccess().getRangeINTTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNumberOptionRule());
					}
					setWithLastConsumed(
						$current,
						"range",
						lv_range_7_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleEnumOption
entryRuleEnumOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumOptionRule()); }
	iv_ruleEnumOption=ruleEnumOption
	{ $current=$iv_ruleEnumOption.current; }
	EOF;

// Rule EnumOption
ruleEnumOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='optionType'
			{
				newLeafNode(otherlv_0, grammarAccess.getEnumOptionAccess().getOptionTypeKeyword_0_0());
			}
			otherlv_1='enum'
			{
				newLeafNode(otherlv_1, grammarAccess.getEnumOptionAccess().getEnumKeyword_0_1());
			}
			otherlv_2='data'
			{
				newLeafNode(otherlv_2, grammarAccess.getEnumOptionAccess().getDataKeyword_0_2());
			}
			(
				(
					lv_stringData_3_0=RULE_STRING
					{
						newLeafNode(lv_stringData_3_0, grammarAccess.getEnumOptionAccess().getStringDataSTRINGTerminalRuleCall_0_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEnumOptionRule());
						}
						addWithLastConsumed(
							$current,
							"stringData",
							lv_stringData_3_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)*
		)
		    |
		(
			(
				lv_numberData_4_0=RULE_STRING
				{
					newLeafNode(lv_numberData_4_0, grammarAccess.getEnumOptionAccess().getNumberDataSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumOptionRule());
					}
					addWithLastConsumed(
						$current,
						"numberData",
						lv_numberData_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)*
	)
;

// Rule Layout
ruleLayout returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='horizontal'
			{
				$current = grammarAccess.getLayoutAccess().getHorizontalEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getLayoutAccess().getHorizontalEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='vertical'
			{
				$current = grammarAccess.getLayoutAccess().getVerticalEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getLayoutAccess().getVerticalEnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
