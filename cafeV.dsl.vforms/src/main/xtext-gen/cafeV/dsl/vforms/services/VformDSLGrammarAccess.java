/*
 * generated by Xtext 2.25.0
 */
package cafeV.dsl.vforms.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class VformDSLGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "cafeV.dsl.vforms.VformDSL.Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFormLayoutKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFormLayoutAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFormLayoutFormLayoutParserRuleCall_1_0 = (RuleCall)cFormLayoutAssignment_1.eContents().get(0);
		private final Keyword cCommaKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cFormInputsKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cFormInputAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cFormInputFormInputParserRuleCall_5_0 = (RuleCall)cFormInputAssignment_5.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Model:
		//    "formLayout:" formLayout=FormLayout ","
		//    "formInputs:" "["
		//        (formInput+=FormInput*)
		//        "]"
		//        ;
		@Override public ParserRule getRule() { return rule; }
		
		//"formLayout:" formLayout=FormLayout ","
		//"formInputs:" "["
		//    (formInput+=FormInput*)
		//    "]"
		public Group getGroup() { return cGroup; }
		
		//"formLayout:"
		public Keyword getFormLayoutKeyword_0() { return cFormLayoutKeyword_0; }
		
		//formLayout=FormLayout
		public Assignment getFormLayoutAssignment_1() { return cFormLayoutAssignment_1; }
		
		//FormLayout
		public RuleCall getFormLayoutFormLayoutParserRuleCall_1_0() { return cFormLayoutFormLayoutParserRuleCall_1_0; }
		
		//","
		public Keyword getCommaKeyword_2() { return cCommaKeyword_2; }
		
		//"formInputs:"
		public Keyword getFormInputsKeyword_3() { return cFormInputsKeyword_3; }
		
		//"["
		public Keyword getLeftSquareBracketKeyword_4() { return cLeftSquareBracketKeyword_4; }
		
		//(formInput+=FormInput*)
		public Assignment getFormInputAssignment_5() { return cFormInputAssignment_5; }
		
		//FormInput
		public RuleCall getFormInputFormInputParserRuleCall_5_0() { return cFormInputFormInputParserRuleCall_5_0; }
		
		//"]"
		public Keyword getRightSquareBracketKeyword_6() { return cRightSquareBracketKeyword_6; }
	}
	public class FormLayoutElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "cafeV.dsl.vforms.VformDSL.FormLayout");
		private final Assignment cLayoutAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cLayoutLayoutEnumRuleCall_0 = (RuleCall)cLayoutAssignment.eContents().get(0);
		
		//FormLayout:
		//    layout=Layout;
		@Override public ParserRule getRule() { return rule; }
		
		//layout=Layout
		public Assignment getLayoutAssignment() { return cLayoutAssignment; }
		
		//Layout
		public RuleCall getLayoutLayoutEnumRuleCall_0() { return cLayoutLayoutEnumRuleCall_0; }
	}
	public class FormInputElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "cafeV.dsl.vforms.VformDSL.FormInput");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cTextAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cTextTextParserRuleCall_0_0 = (RuleCall)cTextAssignment_0.eContents().get(0);
		private final Assignment cCheckboxAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cCheckboxCheckboxParserRuleCall_1_0 = (RuleCall)cCheckboxAssignment_1.eContents().get(0);
		private final Assignment cNumberAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cNumberNumberParserRuleCall_2_0 = (RuleCall)cNumberAssignment_2.eContents().get(0);
		private final Assignment cDatAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cDatDatParserRuleCall_3_0 = (RuleCall)cDatAssignment_3.eContents().get(0);
		private final Assignment cRangeAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cRangeRangeParserRuleCall_4_0 = (RuleCall)cRangeAssignment_4.eContents().get(0);
		private final Assignment cSelectAssignment_5 = (Assignment)cAlternatives.eContents().get(5);
		private final RuleCall cSelectSelectParserRuleCall_5_0 = (RuleCall)cSelectAssignment_5.eContents().get(0);
		private final Assignment cSearchAssignment_6 = (Assignment)cAlternatives.eContents().get(6);
		private final RuleCall cSearchSearchParserRuleCall_6_0 = (RuleCall)cSearchAssignment_6.eContents().get(0);
		private final Assignment cGroupAssignment_7 = (Assignment)cAlternatives.eContents().get(7);
		private final RuleCall cGroupGroupParserRuleCall_7_0 = (RuleCall)cGroupAssignment_7.eContents().get(0);
		
		//FormInput:
		//     text+=Text|checkbox+=Checkbox|number+=Number|dat+=Dat|range+=Range|select+=Select|search+=Search|group+=Group;
		@Override public ParserRule getRule() { return rule; }
		
		//text+=Text|checkbox+=Checkbox|number+=Number|dat+=Dat|range+=Range|select+=Select|search+=Search|group+=Group
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//text+=Text
		public Assignment getTextAssignment_0() { return cTextAssignment_0; }
		
		//Text
		public RuleCall getTextTextParserRuleCall_0_0() { return cTextTextParserRuleCall_0_0; }
		
		//checkbox+=Checkbox
		public Assignment getCheckboxAssignment_1() { return cCheckboxAssignment_1; }
		
		//Checkbox
		public RuleCall getCheckboxCheckboxParserRuleCall_1_0() { return cCheckboxCheckboxParserRuleCall_1_0; }
		
		//number+=Number
		public Assignment getNumberAssignment_2() { return cNumberAssignment_2; }
		
		//Number
		public RuleCall getNumberNumberParserRuleCall_2_0() { return cNumberNumberParserRuleCall_2_0; }
		
		//dat+=Dat
		public Assignment getDatAssignment_3() { return cDatAssignment_3; }
		
		//Dat
		public RuleCall getDatDatParserRuleCall_3_0() { return cDatDatParserRuleCall_3_0; }
		
		//range+=Range
		public Assignment getRangeAssignment_4() { return cRangeAssignment_4; }
		
		//Range
		public RuleCall getRangeRangeParserRuleCall_4_0() { return cRangeRangeParserRuleCall_4_0; }
		
		//select+=Select
		public Assignment getSelectAssignment_5() { return cSelectAssignment_5; }
		
		//Select
		public RuleCall getSelectSelectParserRuleCall_5_0() { return cSelectSelectParserRuleCall_5_0; }
		
		//search+=Search
		public Assignment getSearchAssignment_6() { return cSearchAssignment_6; }
		
		//Search
		public RuleCall getSearchSearchParserRuleCall_6_0() { return cSearchSearchParserRuleCall_6_0; }
		
		//group+=Group
		public Assignment getGroupAssignment_7() { return cGroupAssignment_7; }
		
		//Group
		public RuleCall getGroupGroupParserRuleCall_7_0() { return cGroupGroupParserRuleCall_7_0; }
	}
	public class TextElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "cafeV.dsl.vforms.VformDSL.Text");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cInputTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cTextKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cInputNameKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cInputNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cInputNameSTRINGTerminalRuleCall_5_0 = (RuleCall)cInputNameAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Text:
		//   "{"
		//        "inputType:" "text" ","
		//        "inputName:" inputName=STRING
		//    "}";
		@Override public ParserRule getRule() { return rule; }
		
		//"{"
		//     "inputType:" "text" ","
		//     "inputName:" inputName=STRING
		// "}"
		public Group getGroup() { return cGroup; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }
		
		//"inputType:"
		public Keyword getInputTypeKeyword_1() { return cInputTypeKeyword_1; }
		
		//"text"
		public Keyword getTextKeyword_2() { return cTextKeyword_2; }
		
		//","
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//"inputName:"
		public Keyword getInputNameKeyword_4() { return cInputNameKeyword_4; }
		
		//inputName=STRING
		public Assignment getInputNameAssignment_5() { return cInputNameAssignment_5; }
		
		//STRING
		public RuleCall getInputNameSTRINGTerminalRuleCall_5_0() { return cInputNameSTRINGTerminalRuleCall_5_0; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class CheckboxElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "cafeV.dsl.vforms.VformDSL.Checkbox");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cInputTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cCheckboxKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cInputNameKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cInputNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cInputNameSTRINGTerminalRuleCall_5_0 = (RuleCall)cInputNameAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Checkbox:
		//    "{"
		//        "inputType:" "checkbox" ","
		//        "inputName:" inputName=STRING
		//    "}";
		@Override public ParserRule getRule() { return rule; }
		
		//"{"
		//    "inputType:" "checkbox" ","
		//    "inputName:" inputName=STRING
		//"}"
		public Group getGroup() { return cGroup; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }
		
		//"inputType:"
		public Keyword getInputTypeKeyword_1() { return cInputTypeKeyword_1; }
		
		//"checkbox"
		public Keyword getCheckboxKeyword_2() { return cCheckboxKeyword_2; }
		
		//","
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//"inputName:"
		public Keyword getInputNameKeyword_4() { return cInputNameKeyword_4; }
		
		//inputName=STRING
		public Assignment getInputNameAssignment_5() { return cInputNameAssignment_5; }
		
		//STRING
		public RuleCall getInputNameSTRINGTerminalRuleCall_5_0() { return cInputNameSTRINGTerminalRuleCall_5_0; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class NumberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "cafeV.dsl.vforms.VformDSL.Number");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cInputTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cNumberKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cInputNameKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cInputNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cInputNameSTRINGTerminalRuleCall_5_0 = (RuleCall)cInputNameAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Number:
		//    "{"
		//        "inputType:" "number" ","
		//        "inputName:" inputName=STRING
		//    "}";
		@Override public ParserRule getRule() { return rule; }
		
		//"{"
		//    "inputType:" "number" ","
		//    "inputName:" inputName=STRING
		//"}"
		public Group getGroup() { return cGroup; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }
		
		//"inputType:"
		public Keyword getInputTypeKeyword_1() { return cInputTypeKeyword_1; }
		
		//"number"
		public Keyword getNumberKeyword_2() { return cNumberKeyword_2; }
		
		//","
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//"inputName:"
		public Keyword getInputNameKeyword_4() { return cInputNameKeyword_4; }
		
		//inputName=STRING
		public Assignment getInputNameAssignment_5() { return cInputNameAssignment_5; }
		
		//STRING
		public RuleCall getInputNameSTRINGTerminalRuleCall_5_0() { return cInputNameSTRINGTerminalRuleCall_5_0; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class DatElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "cafeV.dsl.vforms.VformDSL.Dat");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cInputTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cDateKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cInputNameKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cInputNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cInputNameSTRINGTerminalRuleCall_5_0 = (RuleCall)cInputNameAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Dat :
		//    "{"
		//        "inputType:" "date" ","
		//        "inputName:" inputName=STRING
		//    "}";
		@Override public ParserRule getRule() { return rule; }
		
		//"{"
		//    "inputType:" "date" ","
		//    "inputName:" inputName=STRING
		//"}"
		public Group getGroup() { return cGroup; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }
		
		//"inputType:"
		public Keyword getInputTypeKeyword_1() { return cInputTypeKeyword_1; }
		
		//"date"
		public Keyword getDateKeyword_2() { return cDateKeyword_2; }
		
		//","
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//"inputName:"
		public Keyword getInputNameKeyword_4() { return cInputNameKeyword_4; }
		
		//inputName=STRING
		public Assignment getInputNameAssignment_5() { return cInputNameAssignment_5; }
		
		//STRING
		public RuleCall getInputNameSTRINGTerminalRuleCall_5_0() { return cInputNameSTRINGTerminalRuleCall_5_0; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class RangeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "cafeV.dsl.vforms.VformDSL.Range");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cInputTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cRangeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cInputNameKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cInputNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cInputNameSTRINGTerminalRuleCall_5_0 = (RuleCall)cInputNameAssignment_5.eContents().get(0);
		private final Keyword cCommaKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cMinKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cMinAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cMinINTTerminalRuleCall_8_0 = (RuleCall)cMinAssignment_8.eContents().get(0);
		private final Keyword cCommaKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cMaxKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cMaxAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cMaxINTTerminalRuleCall_11_0 = (RuleCall)cMaxAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//Range:
		//    "{"
		//        "inputType:" "range" ","
		//        "inputName:" inputName=STRING ","
		//        "min:" min=INT ","
		//        "max:" max=INT
		//    "}";
		@Override public ParserRule getRule() { return rule; }
		
		//"{"
		//    "inputType:" "range" ","
		//    "inputName:" inputName=STRING ","
		//    "min:" min=INT ","
		//    "max:" max=INT
		//"}"
		public Group getGroup() { return cGroup; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }
		
		//"inputType:"
		public Keyword getInputTypeKeyword_1() { return cInputTypeKeyword_1; }
		
		//"range"
		public Keyword getRangeKeyword_2() { return cRangeKeyword_2; }
		
		//","
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//"inputName:"
		public Keyword getInputNameKeyword_4() { return cInputNameKeyword_4; }
		
		//inputName=STRING
		public Assignment getInputNameAssignment_5() { return cInputNameAssignment_5; }
		
		//STRING
		public RuleCall getInputNameSTRINGTerminalRuleCall_5_0() { return cInputNameSTRINGTerminalRuleCall_5_0; }
		
		//","
		public Keyword getCommaKeyword_6() { return cCommaKeyword_6; }
		
		//"min:"
		public Keyword getMinKeyword_7() { return cMinKeyword_7; }
		
		//min=INT
		public Assignment getMinAssignment_8() { return cMinAssignment_8; }
		
		//INT
		public RuleCall getMinINTTerminalRuleCall_8_0() { return cMinINTTerminalRuleCall_8_0; }
		
		//","
		public Keyword getCommaKeyword_9() { return cCommaKeyword_9; }
		
		//"max:"
		public Keyword getMaxKeyword_10() { return cMaxKeyword_10; }
		
		//max=INT
		public Assignment getMaxAssignment_11() { return cMaxAssignment_11; }
		
		//INT
		public RuleCall getMaxINTTerminalRuleCall_11_0() { return cMaxINTTerminalRuleCall_11_0; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	public class SelectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "cafeV.dsl.vforms.VformDSL.Select");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cInputTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cSelectKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cInputNameKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cInputNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cInputNameSTRINGTerminalRuleCall_5_0 = (RuleCall)cInputNameAssignment_5.eContents().get(0);
		private final Keyword cCommaKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cOptionsKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Alternatives cAlternatives_8 = (Alternatives)cGroup.eContents().get(8);
		private final Assignment cDataOptionAssignment_8_0 = (Assignment)cAlternatives_8.eContents().get(0);
		private final RuleCall cDataOptionDataOptionParserRuleCall_8_0_0 = (RuleCall)cDataOptionAssignment_8_0.eContents().get(0);
		private final Assignment cEnumOptionAssignment_8_1 = (Assignment)cAlternatives_8.eContents().get(1);
		private final RuleCall cEnumOptionEnumOptionParserRuleCall_8_1_0 = (RuleCall)cEnumOptionAssignment_8_1.eContents().get(0);
		private final Assignment cNumberOptionAssignment_8_2 = (Assignment)cAlternatives_8.eContents().get(2);
		private final RuleCall cNumberOptionNumberOptionParserRuleCall_8_2_0 = (RuleCall)cNumberOptionAssignment_8_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Select:
		//    "{"
		//        "inputType:" "select" ","
		//        "inputName:" inputName=STRING ","
		//        "options:" (dataOption=DataOption|enumOption=EnumOption|numberOption=NumberOption)
		//    "}";
		@Override public ParserRule getRule() { return rule; }
		
		//"{"
		//    "inputType:" "select" ","
		//    "inputName:" inputName=STRING ","
		//    "options:" (dataOption=DataOption|enumOption=EnumOption|numberOption=NumberOption)
		//"}"
		public Group getGroup() { return cGroup; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }
		
		//"inputType:"
		public Keyword getInputTypeKeyword_1() { return cInputTypeKeyword_1; }
		
		//"select"
		public Keyword getSelectKeyword_2() { return cSelectKeyword_2; }
		
		//","
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//"inputName:"
		public Keyword getInputNameKeyword_4() { return cInputNameKeyword_4; }
		
		//inputName=STRING
		public Assignment getInputNameAssignment_5() { return cInputNameAssignment_5; }
		
		//STRING
		public RuleCall getInputNameSTRINGTerminalRuleCall_5_0() { return cInputNameSTRINGTerminalRuleCall_5_0; }
		
		//","
		public Keyword getCommaKeyword_6() { return cCommaKeyword_6; }
		
		//"options:"
		public Keyword getOptionsKeyword_7() { return cOptionsKeyword_7; }
		
		//(dataOption=DataOption|enumOption=EnumOption|numberOption=NumberOption)
		public Alternatives getAlternatives_8() { return cAlternatives_8; }
		
		//dataOption=DataOption
		public Assignment getDataOptionAssignment_8_0() { return cDataOptionAssignment_8_0; }
		
		//DataOption
		public RuleCall getDataOptionDataOptionParserRuleCall_8_0_0() { return cDataOptionDataOptionParserRuleCall_8_0_0; }
		
		//enumOption=EnumOption
		public Assignment getEnumOptionAssignment_8_1() { return cEnumOptionAssignment_8_1; }
		
		//EnumOption
		public RuleCall getEnumOptionEnumOptionParserRuleCall_8_1_0() { return cEnumOptionEnumOptionParserRuleCall_8_1_0; }
		
		//numberOption=NumberOption
		public Assignment getNumberOptionAssignment_8_2() { return cNumberOptionAssignment_8_2; }
		
		//NumberOption
		public RuleCall getNumberOptionNumberOptionParserRuleCall_8_2_0() { return cNumberOptionNumberOptionParserRuleCall_8_2_0; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class SearchElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "cafeV.dsl.vforms.VformDSL.Search");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cInputTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cSelectKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cInputNameKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cInputNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cInputNameSTRINGTerminalRuleCall_5_0 = (RuleCall)cInputNameAssignment_5.eContents().get(0);
		private final Keyword cCommaKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cOptionsKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cLeftSquareBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Alternatives cAlternatives_9 = (Alternatives)cGroup.eContents().get(9);
		private final Assignment cStringDataAssignment_9_0 = (Assignment)cAlternatives_9.eContents().get(0);
		private final RuleCall cStringDataSTRINGTerminalRuleCall_9_0_0 = (RuleCall)cStringDataAssignment_9_0.eContents().get(0);
		private final Assignment cNumberDataAssignment_9_1 = (Assignment)cAlternatives_9.eContents().get(1);
		private final RuleCall cNumberDataINTTerminalRuleCall_9_1_0 = (RuleCall)cNumberDataAssignment_9_1.eContents().get(0);
		private final Assignment cDataAssignment_9_2 = (Assignment)cAlternatives_9.eContents().get(2);
		private final RuleCall cDataDataParserRuleCall_9_2_0 = (RuleCall)cDataAssignment_9_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//Search:
		//    "{"
		//        "inputType:" "select" ","
		//        "inputName:" inputName=STRING ","
		//        "options:" "[" (stringData+=STRING*|numberData+=INT*|data+=Data*) "]"
		//    "}";
		@Override public ParserRule getRule() { return rule; }
		
		//"{"
		//    "inputType:" "select" ","
		//    "inputName:" inputName=STRING ","
		//    "options:" "[" (stringData+=STRING*|numberData+=INT*|data+=Data*) "]"
		//"}"
		public Group getGroup() { return cGroup; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }
		
		//"inputType:"
		public Keyword getInputTypeKeyword_1() { return cInputTypeKeyword_1; }
		
		//"select"
		public Keyword getSelectKeyword_2() { return cSelectKeyword_2; }
		
		//","
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//"inputName:"
		public Keyword getInputNameKeyword_4() { return cInputNameKeyword_4; }
		
		//inputName=STRING
		public Assignment getInputNameAssignment_5() { return cInputNameAssignment_5; }
		
		//STRING
		public RuleCall getInputNameSTRINGTerminalRuleCall_5_0() { return cInputNameSTRINGTerminalRuleCall_5_0; }
		
		//","
		public Keyword getCommaKeyword_6() { return cCommaKeyword_6; }
		
		//"options:"
		public Keyword getOptionsKeyword_7() { return cOptionsKeyword_7; }
		
		//"["
		public Keyword getLeftSquareBracketKeyword_8() { return cLeftSquareBracketKeyword_8; }
		
		//(stringData+=STRING*|numberData+=INT*|data+=Data*)
		public Alternatives getAlternatives_9() { return cAlternatives_9; }
		
		//stringData+=STRING*
		public Assignment getStringDataAssignment_9_0() { return cStringDataAssignment_9_0; }
		
		//STRING
		public RuleCall getStringDataSTRINGTerminalRuleCall_9_0_0() { return cStringDataSTRINGTerminalRuleCall_9_0_0; }
		
		//numberData+=INT*
		public Assignment getNumberDataAssignment_9_1() { return cNumberDataAssignment_9_1; }
		
		//INT
		public RuleCall getNumberDataINTTerminalRuleCall_9_1_0() { return cNumberDataINTTerminalRuleCall_9_1_0; }
		
		//data+=Data*
		public Assignment getDataAssignment_9_2() { return cDataAssignment_9_2; }
		
		//Data
		public RuleCall getDataDataParserRuleCall_9_2_0() { return cDataDataParserRuleCall_9_2_0; }
		
		//"]"
		public Keyword getRightSquareBracketKeyword_10() { return cRightSquareBracketKeyword_10; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class GroupElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "cafeV.dsl.vforms.VformDSL.Group");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cInputTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cGroupKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cInputNameKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cInputNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cInputNameSTRINGTerminalRuleCall_5_0 = (RuleCall)cInputNameAssignment_5.eContents().get(0);
		private final Keyword cCommaKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cGroupInputsKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cGroupInputsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cGroupInputsFormInputCrossReference_8_0 = (CrossReference)cGroupInputsAssignment_8.eContents().get(0);
		private final RuleCall cGroupInputsFormInputIDTerminalRuleCall_8_0_1 = (RuleCall)cGroupInputsFormInputCrossReference_8_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Group:
		//    "{"
		//        "inputType:" "group" ","
		//        "inputName:" inputName=STRING ","
		//        "groupInputs:"  groupInputs+=([FormInput])*
		//    "}";
		@Override public ParserRule getRule() { return rule; }
		
		//"{"
		//    "inputType:" "group" ","
		//    "inputName:" inputName=STRING ","
		//    "groupInputs:"  groupInputs+=([FormInput])*
		//"}"
		public Group getGroup() { return cGroup; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }
		
		//"inputType:"
		public Keyword getInputTypeKeyword_1() { return cInputTypeKeyword_1; }
		
		//"group"
		public Keyword getGroupKeyword_2() { return cGroupKeyword_2; }
		
		//","
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//"inputName:"
		public Keyword getInputNameKeyword_4() { return cInputNameKeyword_4; }
		
		//inputName=STRING
		public Assignment getInputNameAssignment_5() { return cInputNameAssignment_5; }
		
		//STRING
		public RuleCall getInputNameSTRINGTerminalRuleCall_5_0() { return cInputNameSTRINGTerminalRuleCall_5_0; }
		
		//","
		public Keyword getCommaKeyword_6() { return cCommaKeyword_6; }
		
		//"groupInputs:"
		public Keyword getGroupInputsKeyword_7() { return cGroupInputsKeyword_7; }
		
		//groupInputs+=([FormInput])*
		public Assignment getGroupInputsAssignment_8() { return cGroupInputsAssignment_8; }
		
		//([FormInput])
		public CrossReference getGroupInputsFormInputCrossReference_8_0() { return cGroupInputsFormInputCrossReference_8_0; }
		
		//ID
		public RuleCall getGroupInputsFormInputIDTerminalRuleCall_8_0_1() { return cGroupInputsFormInputIDTerminalRuleCall_8_0_1; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class DataOptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "cafeV.dsl.vforms.VformDSL.DataOption");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cOptionTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cDataKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cDataKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cDataAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cDataDataParserRuleCall_6_0 = (RuleCall)cDataAssignment_6.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//DataOption:
		//    "{"
		//          "optionType:" "data" ","
		//         "data:" "[" data+=Data* "]"
		//    "}";
		@Override public ParserRule getRule() { return rule; }
		
		//"{"
		//      "optionType:" "data" ","
		//     "data:" "[" data+=Data* "]"
		//"}"
		public Group getGroup() { return cGroup; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }
		
		//"optionType:"
		public Keyword getOptionTypeKeyword_1() { return cOptionTypeKeyword_1; }
		
		//"data"
		public Keyword getDataKeyword_2() { return cDataKeyword_2; }
		
		//","
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//"data:"
		public Keyword getDataKeyword_4() { return cDataKeyword_4; }
		
		//"["
		public Keyword getLeftSquareBracketKeyword_5() { return cLeftSquareBracketKeyword_5; }
		
		//data+=Data*
		public Assignment getDataAssignment_6() { return cDataAssignment_6; }
		
		//Data
		public RuleCall getDataDataParserRuleCall_6_0() { return cDataDataParserRuleCall_6_0; }
		
		//"]"
		public Keyword getRightSquareBracketKeyword_7() { return cRightSquareBracketKeyword_7; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class EnumOptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "cafeV.dsl.vforms.VformDSL.EnumOption");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cOptionTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cEnumKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cDataKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final Assignment cStringDataAssignment_6_0 = (Assignment)cAlternatives_6.eContents().get(0);
		private final RuleCall cStringDataSTRINGTerminalRuleCall_6_0_0 = (RuleCall)cStringDataAssignment_6_0.eContents().get(0);
		private final Assignment cNumberDataAssignment_6_1 = (Assignment)cAlternatives_6.eContents().get(1);
		private final RuleCall cNumberDataINTTerminalRuleCall_6_1_0 = (RuleCall)cNumberDataAssignment_6_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//EnumOption:
		//    "{"
		//          "optionType:" "enum" ","
		//         "data:" "[" (stringData+=STRING*|numberData+=INT*) "]"
		//    "}";
		@Override public ParserRule getRule() { return rule; }
		
		//"{"
		//      "optionType:" "enum" ","
		//     "data:" "[" (stringData+=STRING*|numberData+=INT*) "]"
		//"}"
		public Group getGroup() { return cGroup; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }
		
		//"optionType:"
		public Keyword getOptionTypeKeyword_1() { return cOptionTypeKeyword_1; }
		
		//"enum"
		public Keyword getEnumKeyword_2() { return cEnumKeyword_2; }
		
		//","
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//"data:"
		public Keyword getDataKeyword_4() { return cDataKeyword_4; }
		
		//"["
		public Keyword getLeftSquareBracketKeyword_5() { return cLeftSquareBracketKeyword_5; }
		
		//(stringData+=STRING*|numberData+=INT*)
		public Alternatives getAlternatives_6() { return cAlternatives_6; }
		
		//stringData+=STRING*
		public Assignment getStringDataAssignment_6_0() { return cStringDataAssignment_6_0; }
		
		//STRING
		public RuleCall getStringDataSTRINGTerminalRuleCall_6_0_0() { return cStringDataSTRINGTerminalRuleCall_6_0_0; }
		
		//numberData+=INT*
		public Assignment getNumberDataAssignment_6_1() { return cNumberDataAssignment_6_1; }
		
		//INT
		public RuleCall getNumberDataINTTerminalRuleCall_6_1_0() { return cNumberDataINTTerminalRuleCall_6_1_0; }
		
		//"]"
		public Keyword getRightSquareBracketKeyword_7() { return cRightSquareBracketKeyword_7; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class NumberOptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "cafeV.dsl.vforms.VformDSL.NumberOption");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cOptionTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cNumberKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cMinKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cMinAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cMinINTTerminalRuleCall_5_0 = (RuleCall)cMinAssignment_5.eContents().get(0);
		private final Keyword cCommaKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cMaxKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cMaxAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cMaxINTTerminalRuleCall_8_0 = (RuleCall)cMaxAssignment_8.eContents().get(0);
		private final Keyword cCommaKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cRangeKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cRangeAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cRangeINTTerminalRuleCall_11_0 = (RuleCall)cRangeAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//NumberOption:
		//    "{"
		//          "optionType:" "number" ","
		//         "min:" min=INT ","
		//        "max:" max=INT ","
		//        "range:" range=INT
		//    "}";
		@Override public ParserRule getRule() { return rule; }
		
		//"{"
		//      "optionType:" "number" ","
		//     "min:" min=INT ","
		//    "max:" max=INT ","
		//    "range:" range=INT
		//"}"
		public Group getGroup() { return cGroup; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }
		
		//"optionType:"
		public Keyword getOptionTypeKeyword_1() { return cOptionTypeKeyword_1; }
		
		//"number"
		public Keyword getNumberKeyword_2() { return cNumberKeyword_2; }
		
		//","
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//"min:"
		public Keyword getMinKeyword_4() { return cMinKeyword_4; }
		
		//min=INT
		public Assignment getMinAssignment_5() { return cMinAssignment_5; }
		
		//INT
		public RuleCall getMinINTTerminalRuleCall_5_0() { return cMinINTTerminalRuleCall_5_0; }
		
		//","
		public Keyword getCommaKeyword_6() { return cCommaKeyword_6; }
		
		//"max:"
		public Keyword getMaxKeyword_7() { return cMaxKeyword_7; }
		
		//max=INT
		public Assignment getMaxAssignment_8() { return cMaxAssignment_8; }
		
		//INT
		public RuleCall getMaxINTTerminalRuleCall_8_0() { return cMaxINTTerminalRuleCall_8_0; }
		
		//","
		public Keyword getCommaKeyword_9() { return cCommaKeyword_9; }
		
		//"range:"
		public Keyword getRangeKeyword_10() { return cRangeKeyword_10; }
		
		//range=INT
		public Assignment getRangeAssignment_11() { return cRangeAssignment_11; }
		
		//INT
		public RuleCall getRangeINTTerminalRuleCall_11_0() { return cRangeINTTerminalRuleCall_11_0; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	public class DataElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "cafeV.dsl.vforms.VformDSL.Data");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLabelKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cLabelAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLabelSTRINGTerminalRuleCall_2_0 = (RuleCall)cLabelAssignment_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cValueKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Assignment cStrValAssignment_5_0 = (Assignment)cAlternatives_5.eContents().get(0);
		private final RuleCall cStrValSTRINGTerminalRuleCall_5_0_0 = (RuleCall)cStrValAssignment_5_0.eContents().get(0);
		private final Assignment cIntValAssignment_5_1 = (Assignment)cAlternatives_5.eContents().get(1);
		private final RuleCall cIntValINTTerminalRuleCall_5_1_0 = (RuleCall)cIntValAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Data:
		//    "{"
		//           "label:" label=STRING ","
		//        "value:" (strVal=STRING|intVal=INT)
		//    "}";
		@Override public ParserRule getRule() { return rule; }
		
		//"{"
		//       "label:" label=STRING ","
		//    "value:" (strVal=STRING|intVal=INT)
		//"}"
		public Group getGroup() { return cGroup; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }
		
		//"label:"
		public Keyword getLabelKeyword_1() { return cLabelKeyword_1; }
		
		//label=STRING
		public Assignment getLabelAssignment_2() { return cLabelAssignment_2; }
		
		//STRING
		public RuleCall getLabelSTRINGTerminalRuleCall_2_0() { return cLabelSTRINGTerminalRuleCall_2_0; }
		
		//","
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//"value:"
		public Keyword getValueKeyword_4() { return cValueKeyword_4; }
		
		//(strVal=STRING|intVal=INT)
		public Alternatives getAlternatives_5() { return cAlternatives_5; }
		
		//strVal=STRING
		public Assignment getStrValAssignment_5_0() { return cStrValAssignment_5_0; }
		
		//STRING
		public RuleCall getStrValSTRINGTerminalRuleCall_5_0_0() { return cStrValSTRINGTerminalRuleCall_5_0_0; }
		
		//intVal=INT
		public Assignment getIntValAssignment_5_1() { return cIntValAssignment_5_1; }
		
		//INT
		public RuleCall getIntValINTTerminalRuleCall_5_1_0() { return cIntValINTTerminalRuleCall_5_1_0; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	
	public class LayoutElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "cafeV.dsl.vforms.VformDSL.Layout");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cHorizontalEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cHorizontalHorizontalKeyword_0_0 = (Keyword)cHorizontalEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cVerticalEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cVerticalVerticalKeyword_1_0 = (Keyword)cVerticalEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum Layout:
		//    horizontal|vertical ;
		public EnumRule getRule() { return rule; }
		
		//horizontal|vertical
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//horizontal
		public EnumLiteralDeclaration getHorizontalEnumLiteralDeclaration_0() { return cHorizontalEnumLiteralDeclaration_0; }
		
		public Keyword getHorizontalHorizontalKeyword_0_0() { return cHorizontalHorizontalKeyword_0_0; }
		
		//vertical
		public EnumLiteralDeclaration getVerticalEnumLiteralDeclaration_1() { return cVerticalEnumLiteralDeclaration_1; }
		
		public Keyword getVerticalVerticalKeyword_1_0() { return cVerticalVerticalKeyword_1_0; }
	}
	
	private final ModelElements pModel;
	private final FormLayoutElements pFormLayout;
	private final FormInputElements pFormInput;
	private final TextElements pText;
	private final CheckboxElements pCheckbox;
	private final NumberElements pNumber;
	private final DatElements pDat;
	private final RangeElements pRange;
	private final SelectElements pSelect;
	private final SearchElements pSearch;
	private final GroupElements pGroup;
	private final DataOptionElements pDataOption;
	private final EnumOptionElements pEnumOption;
	private final NumberOptionElements pNumberOption;
	private final DataElements pData;
	private final LayoutElements eLayout;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public VformDSLGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pFormLayout = new FormLayoutElements();
		this.pFormInput = new FormInputElements();
		this.pText = new TextElements();
		this.pCheckbox = new CheckboxElements();
		this.pNumber = new NumberElements();
		this.pDat = new DatElements();
		this.pRange = new RangeElements();
		this.pSelect = new SelectElements();
		this.pSearch = new SearchElements();
		this.pGroup = new GroupElements();
		this.pDataOption = new DataOptionElements();
		this.pEnumOption = new EnumOptionElements();
		this.pNumberOption = new NumberOptionElements();
		this.pData = new DataElements();
		this.eLayout = new LayoutElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("cafeV.dsl.vforms.VformDSL".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//    "formLayout:" formLayout=FormLayout ","
	//    "formInputs:" "["
	//        (formInput+=FormInput*)
	//        "]"
	//        ;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//FormLayout:
	//    layout=Layout;
	public FormLayoutElements getFormLayoutAccess() {
		return pFormLayout;
	}
	
	public ParserRule getFormLayoutRule() {
		return getFormLayoutAccess().getRule();
	}
	
	//FormInput:
	//     text+=Text|checkbox+=Checkbox|number+=Number|dat+=Dat|range+=Range|select+=Select|search+=Search|group+=Group;
	public FormInputElements getFormInputAccess() {
		return pFormInput;
	}
	
	public ParserRule getFormInputRule() {
		return getFormInputAccess().getRule();
	}
	
	//Text:
	//   "{"
	//        "inputType:" "text" ","
	//        "inputName:" inputName=STRING
	//    "}";
	public TextElements getTextAccess() {
		return pText;
	}
	
	public ParserRule getTextRule() {
		return getTextAccess().getRule();
	}
	
	//Checkbox:
	//    "{"
	//        "inputType:" "checkbox" ","
	//        "inputName:" inputName=STRING
	//    "}";
	public CheckboxElements getCheckboxAccess() {
		return pCheckbox;
	}
	
	public ParserRule getCheckboxRule() {
		return getCheckboxAccess().getRule();
	}
	
	//Number:
	//    "{"
	//        "inputType:" "number" ","
	//        "inputName:" inputName=STRING
	//    "}";
	public NumberElements getNumberAccess() {
		return pNumber;
	}
	
	public ParserRule getNumberRule() {
		return getNumberAccess().getRule();
	}
	
	//Dat :
	//    "{"
	//        "inputType:" "date" ","
	//        "inputName:" inputName=STRING
	//    "}";
	public DatElements getDatAccess() {
		return pDat;
	}
	
	public ParserRule getDatRule() {
		return getDatAccess().getRule();
	}
	
	//Range:
	//    "{"
	//        "inputType:" "range" ","
	//        "inputName:" inputName=STRING ","
	//        "min:" min=INT ","
	//        "max:" max=INT
	//    "}";
	public RangeElements getRangeAccess() {
		return pRange;
	}
	
	public ParserRule getRangeRule() {
		return getRangeAccess().getRule();
	}
	
	//Select:
	//    "{"
	//        "inputType:" "select" ","
	//        "inputName:" inputName=STRING ","
	//        "options:" (dataOption=DataOption|enumOption=EnumOption|numberOption=NumberOption)
	//    "}";
	public SelectElements getSelectAccess() {
		return pSelect;
	}
	
	public ParserRule getSelectRule() {
		return getSelectAccess().getRule();
	}
	
	//Search:
	//    "{"
	//        "inputType:" "select" ","
	//        "inputName:" inputName=STRING ","
	//        "options:" "[" (stringData+=STRING*|numberData+=INT*|data+=Data*) "]"
	//    "}";
	public SearchElements getSearchAccess() {
		return pSearch;
	}
	
	public ParserRule getSearchRule() {
		return getSearchAccess().getRule();
	}
	
	//Group:
	//    "{"
	//        "inputType:" "group" ","
	//        "inputName:" inputName=STRING ","
	//        "groupInputs:"  groupInputs+=([FormInput])*
	//    "}";
	public GroupElements getGroupAccess() {
		return pGroup;
	}
	
	public ParserRule getGroupRule() {
		return getGroupAccess().getRule();
	}
	
	//DataOption:
	//    "{"
	//          "optionType:" "data" ","
	//         "data:" "[" data+=Data* "]"
	//    "}";
	public DataOptionElements getDataOptionAccess() {
		return pDataOption;
	}
	
	public ParserRule getDataOptionRule() {
		return getDataOptionAccess().getRule();
	}
	
	//EnumOption:
	//    "{"
	//          "optionType:" "enum" ","
	//         "data:" "[" (stringData+=STRING*|numberData+=INT*) "]"
	//    "}";
	public EnumOptionElements getEnumOptionAccess() {
		return pEnumOption;
	}
	
	public ParserRule getEnumOptionRule() {
		return getEnumOptionAccess().getRule();
	}
	
	//NumberOption:
	//    "{"
	//          "optionType:" "number" ","
	//         "min:" min=INT ","
	//        "max:" max=INT ","
	//        "range:" range=INT
	//    "}";
	public NumberOptionElements getNumberOptionAccess() {
		return pNumberOption;
	}
	
	public ParserRule getNumberOptionRule() {
		return getNumberOptionAccess().getRule();
	}
	
	//Data:
	//    "{"
	//           "label:" label=STRING ","
	//        "value:" (strVal=STRING|intVal=INT)
	//    "}";
	public DataElements getDataAccess() {
		return pData;
	}
	
	public ParserRule getDataRule() {
		return getDataAccess().getRule();
	}
	
	//enum Layout:
	//    horizontal|vertical ;
	public LayoutElements getLayoutAccess() {
		return eLayout;
	}
	
	public EnumRule getLayoutRule() {
		return getLayoutAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
