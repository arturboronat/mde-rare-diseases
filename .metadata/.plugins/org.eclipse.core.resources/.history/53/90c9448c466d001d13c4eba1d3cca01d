package com.server.cafeV.webapp.service;

import java.io.File;
import java.io.IOException;
import java.net.URISyntaxException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import org.springframework.stereotype.Service;
import com.fasterxml.jackson.core.exc.StreamReadException;
import com.fasterxml.jackson.core.exc.StreamWriteException;
import com.fasterxml.jackson.databind.DatabindException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.server.cafeV.webapp.model.EnumOption;
import com.server.cafeV.webapp.model.FormInputBasic;
import com.server.cafeV.webapp.model.FormInputSelect;
import com.server.cafeV.webapp.model.VForm;

import csv_to_props.PropsCompiler;
import yamtlDataset.DatasetCompiler;

@Service
public class YAMLServices {
	

	private VForm vFormDSL; 
//	private List<HashMap<String,List<String>>> uiEditProps;
//	private EditProperty uiEditProp;
	final DatasetCompiler dc = new DatasetCompiler();;
	final PropsCompiler pc = new PropsCompiler(); ;
	final ObjectMapper obm = new ObjectMapper();
	final String rootPath = (new File(this.dc.getClass().getProtectionDomain().
			 getCodeSource().getLocation().toURI())).getParentFile().
			 getParent()+"/src/main/resources/datasets/";;
	
	public YAMLServices() throws URISyntaxException {

		 
	}
	
//	public static void main(String[] args) throws IOException, URISyntaxException {
//		
//		YAMLServices yy = new YAMLServices();
//		ObjectMapper obj = new ObjectMapper();
//	
//	VForm vf = yy.getUiEditProp("Mock_data","subject_id");
//		
//		//don't edit
//		String out = obj.writeValueAsString(vf);
//		System.out.print(out);
//		
//		
//	}
	
	
	//This is an Service for retrieving the VForm Generated from the file System
	@SuppressWarnings("unchecked")
	public VForm generateForm(String DataSet) throws IOException, URISyntaxException {
		
			this.vFormDSL = new VForm();
			
		//Get Dataset Paths
			this.dc.compile(rootPath+DataSet);
			//include Error Handling
			this.pc.compile(rootPath+DataSet);
			//include Error Handling
			Path vfUrl = Paths.get(rootPath+DataSet+".vform");
			Path vfJson = Paths.get(rootPath+DataSet+".json");
			File vfPath = new File(rootPath+DataSet+".json");
			
				
			if(vfPath.exists()) {return this.obm.readValue(vfPath, this.vFormDSL.getClass());}
			
			Files.copy(vfUrl, vfJson);
		
//			this.uiEditProps = this.obm.readValue(this.propsPath, this.uiEditProps.getClass());	
			
			return this.obm.readValue(vfPath, this.vFormDSL.getClass());
		
	}
	

	
	//this is a method for generating the edit options for a given input entity it recieves a post request
	public HashMap<String,List<String>> setUiEditProp(String name, List<HashMap<String,List<String>>> props) {	
		
		HashMap<String,List<String>> prop = new HashMap<String,List<String>>();
		
		for(HashMap<String,List<String>> i:props) {
				if(i.get("name").get(0).equals(name)) {
					prop.put("id_",i.get("id_"));
					prop.put("name",i.get("name"));
					prop.put("types",i.get("types"));
					prop.put("groupName",i.get("groupName"));
					
				}
				
			}
		
		return prop;
		
	}
	
	
	//this is a method for retrieving the edit property for a given input entity
	@SuppressWarnings("unchecked")
	public VForm getUiEditProp(String dataSet, String name) throws StreamReadException, DatabindException, IOException {
		
		File propsPath = new File(rootPath+dataSet+"_props.json");
		
		List<HashMap<String,List<String>>> props = new ArrayList<HashMap<String,List<String>>>();
		
		
		props = this.obm.readValue(propsPath, props.getClass());
		
		HashMap<String,List<String>> prop = this.setUiEditProp(name, props);
		
		VForm vEdit = new VForm();
		FormInputBasic id_ = new FormInputBasic();
		FormInputBasic name_ = new FormInputBasic();
		FormInputSelect types = new FormInputSelect();
		EnumOption typesOption = new EnumOption();
		typesOption.setData(prop.get("types"));
		name_.setInputName(prop.get("name").get(0));
		name_.setInputType("text");
		name_.setId(prop.get("name").get(0));
		id_.setInputName("name");
		id_.setId("name");
		id_.setInputType("disabled");
		types.setInputName("inputTypes");
		types.setInputType("select");
		types.setOption(typesOption);
		vEdit.setFormLayout("vertical");
		vEdit.formInputs.add(name_);
		vEdit.formInputs.add(id_);
		vEdit.formInputs.add(types);
		
		
		
		return vEdit;
	}
	
	
	//this is a method for editing the Vform Data
	@SuppressWarnings("unchecked")
	public void editForm(List<HashMap<String,List<String>>> editData) throws StreamWriteException, DatabindException, IOException {
		
		File editJson = new File(this.rootPath+"edit.json");
		 if(editJson.exists()){editJson.delete();}		
		this.obm.writeValue(Paths.get(this.rootPath+"edit.json").toFile(), editData);
	}
	
	
	
	
}
