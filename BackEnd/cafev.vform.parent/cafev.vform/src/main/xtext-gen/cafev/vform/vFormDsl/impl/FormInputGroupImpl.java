/**
 * generated by Xtext 2.28.0
 */
package cafev.vform.vFormDsl.impl;

import cafev.vform.vFormDsl.FormInput;
import cafev.vform.vFormDsl.FormInputGroup;
import cafev.vform.vFormDsl.VFormDslPackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Form Input Group</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link cafev.vform.vFormDsl.impl.FormInputGroupImpl#getGroupInputs <em>Group Inputs</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FormInputGroupImpl extends FormInputImpl implements FormInputGroup
{
  /**
   * The cached value of the '{@link #getGroupInputs() <em>Group Inputs</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGroupInputs()
   * @generated
   * @ordered
   */
  protected EList<FormInput> groupInputs;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FormInputGroupImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return VFormDslPackage.Literals.FORM_INPUT_GROUP;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<FormInput> getGroupInputs()
  {
    if (groupInputs == null)
    {
      groupInputs = new EObjectContainmentEList<FormInput>(FormInput.class, this, VFormDslPackage.FORM_INPUT_GROUP__GROUP_INPUTS);
    }
    return groupInputs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case VFormDslPackage.FORM_INPUT_GROUP__GROUP_INPUTS:
        return ((InternalEList<?>)getGroupInputs()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case VFormDslPackage.FORM_INPUT_GROUP__GROUP_INPUTS:
        return getGroupInputs();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case VFormDslPackage.FORM_INPUT_GROUP__GROUP_INPUTS:
        getGroupInputs().clear();
        getGroupInputs().addAll((Collection<? extends FormInput>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case VFormDslPackage.FORM_INPUT_GROUP__GROUP_INPUTS:
        getGroupInputs().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case VFormDslPackage.FORM_INPUT_GROUP__GROUP_INPUTS:
        return groupInputs != null && !groupInputs.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //FormInputGroupImpl
