/**
 * generated by Xtext 2.28.0
 */
package cafev.vform.vFormDsl.impl;

import cafev.vform.vFormDsl.FormInputSearch;
import cafev.vform.vFormDsl.OptionItem;
import cafev.vform.vFormDsl.VFormDslPackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Form Input Search</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link cafev.vform.vFormDsl.impl.FormInputSearchImpl#getQC <em>QC</em>}</li>
 *   <li>{@link cafev.vform.vFormDsl.impl.FormInputSearchImpl#getData <em>Data</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FormInputSearchImpl extends FormInputImpl implements FormInputSearch
{
  /**
   * The default value of the '{@link #getQC() <em>QC</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getQC()
   * @generated
   * @ordered
   */
  protected static final String QC_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getQC() <em>QC</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getQC()
   * @generated
   * @ordered
   */
  protected String qC = QC_EDEFAULT;

  /**
   * The cached value of the '{@link #getData() <em>Data</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getData()
   * @generated
   * @ordered
   */
  protected EList<OptionItem> data;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FormInputSearchImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return VFormDslPackage.Literals.FORM_INPUT_SEARCH;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getQC()
  {
    return qC;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setQC(String newQC)
  {
    String oldQC = qC;
    qC = newQC;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, VFormDslPackage.FORM_INPUT_SEARCH__QC, oldQC, qC));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<OptionItem> getData()
  {
    if (data == null)
    {
      data = new EObjectContainmentEList<OptionItem>(OptionItem.class, this, VFormDslPackage.FORM_INPUT_SEARCH__DATA);
    }
    return data;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case VFormDslPackage.FORM_INPUT_SEARCH__DATA:
        return ((InternalEList<?>)getData()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case VFormDslPackage.FORM_INPUT_SEARCH__QC:
        return getQC();
      case VFormDslPackage.FORM_INPUT_SEARCH__DATA:
        return getData();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case VFormDslPackage.FORM_INPUT_SEARCH__QC:
        setQC((String)newValue);
        return;
      case VFormDslPackage.FORM_INPUT_SEARCH__DATA:
        getData().clear();
        getData().addAll((Collection<? extends OptionItem>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case VFormDslPackage.FORM_INPUT_SEARCH__QC:
        setQC(QC_EDEFAULT);
        return;
      case VFormDslPackage.FORM_INPUT_SEARCH__DATA:
        getData().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case VFormDslPackage.FORM_INPUT_SEARCH__QC:
        return QC_EDEFAULT == null ? qC != null : !QC_EDEFAULT.equals(qC);
      case VFormDslPackage.FORM_INPUT_SEARCH__DATA:
        return data != null && !data.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (qC: ");
    result.append(qC);
    result.append(')');
    return result.toString();
  }

} //FormInputSearchImpl
