/*
 * generated by Xtext 2.28.0
 */
grammar InternalVFormDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package cafev.vform.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package cafev.vform.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import cafev.vform.services.VFormDslGrammarAccess;

}

@parser::members {

 	private VFormDslGrammarAccess grammarAccess;

    public InternalVFormDslParser(TokenStream input, VFormDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected VFormDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='formLayout:'
		{
			newLeafNode(otherlv_0, grammarAccess.getModelAccess().getFormLayoutKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getFormLayoutFormLayoutParserRuleCall_1_0());
				}
				lv_formLayout_1_0=ruleFormLayout
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"formLayout",
						lv_formLayout_1_0,
						"cafev.vform.VFormDsl.FormLayout");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=','
		{
			newLeafNode(otherlv_2, grammarAccess.getModelAccess().getCommaKeyword_2());
		}
		otherlv_3='formInputs:'
		{
			newLeafNode(otherlv_3, grammarAccess.getModelAccess().getFormInputsKeyword_3());
		}
		otherlv_4='['
		{
			newLeafNode(otherlv_4, grammarAccess.getModelAccess().getLeftSquareBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getFormInputFormInputParserRuleCall_5_0());
				}
				lv_formInput_5_0=ruleFormInput
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"formInput",
						lv_formInput_5_0,
						"cafev.vform.VFormDsl.FormInput");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getModelAccess().getRightSquareBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleFormLayout
entryRuleFormLayout returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFormLayoutRule()); }
	iv_ruleFormLayout=ruleFormLayout
	{ $current=$iv_ruleFormLayout.current; }
	EOF;

// Rule FormLayout
ruleFormLayout returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getFormLayoutAccess().getLayoutLayoutEnumRuleCall_0());
			}
			lv_layout_0_0=ruleLayout
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getFormLayoutRule());
				}
				set(
					$current,
					"layout",
					lv_layout_0_0,
					"cafev.vform.VFormDsl.Layout");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleFormInput
entryRuleFormInput returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFormInputRule()); }
	iv_ruleFormInput=ruleFormInput
	{ $current=$iv_ruleFormInput.current; }
	EOF;

// Rule FormInput
ruleFormInput returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFormInputAccess().getFormInputBasicParserRuleCall_0());
		}
		this_FormInputBasic_0=ruleFormInputBasic
		{
			$current = $this_FormInputBasic_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFormInputAccess().getFormInputRangeParserRuleCall_1());
		}
		this_FormInputRange_1=ruleFormInputRange
		{
			$current = $this_FormInputRange_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFormInputAccess().getFormInputSelectParserRuleCall_2());
		}
		this_FormInputSelect_2=ruleFormInputSelect
		{
			$current = $this_FormInputSelect_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFormInputAccess().getFormInputSearchParserRuleCall_3());
		}
		this_FormInputSearch_3=ruleFormInputSearch
		{
			$current = $this_FormInputSearch_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFormInputAccess().getFormInputGroupParserRuleCall_4());
		}
		this_FormInputGroup_4=ruleFormInputGroup
		{
			$current = $this_FormInputGroup_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFormInputBasic
entryRuleFormInputBasic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFormInputBasicRule()); }
	iv_ruleFormInputBasic=ruleFormInputBasic
	{ $current=$iv_ruleFormInputBasic.current; }
	EOF;

// Rule FormInputBasic
ruleFormInputBasic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='name'
		{
			newLeafNode(otherlv_0, grammarAccess.getFormInputBasicAccess().getNameKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getFormInputBasicAccess().getColonKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_STRING
				{
					newLeafNode(lv_name_2_0, grammarAccess.getFormInputBasicAccess().getNameSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFormInputBasicRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3='type'
		{
			newLeafNode(otherlv_3, grammarAccess.getFormInputBasicAccess().getTypeKeyword_3());
		}
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getFormInputBasicAccess().getColonKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFormInputBasicAccess().getTypeBasicInputTypeEnumRuleCall_5_0());
				}
				lv_type_5_0=ruleBasicInputType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFormInputBasicRule());
					}
					set(
						$current,
						"type",
						lv_type_5_0,
						"cafev.vform.VFormDsl.BasicInputType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFormInputRange
entryRuleFormInputRange returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFormInputRangeRule()); }
	iv_ruleFormInputRange=ruleFormInputRange
	{ $current=$iv_ruleFormInputRange.current; }
	EOF;

// Rule FormInputRange
ruleFormInputRange returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='name'
		{
			newLeafNode(otherlv_0, grammarAccess.getFormInputRangeAccess().getNameKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getFormInputRangeAccess().getColonKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_STRING
				{
					newLeafNode(lv_name_2_0, grammarAccess.getFormInputRangeAccess().getNameSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFormInputRangeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getFormInputRangeAccess().getCommaKeyword_3());
		}
		otherlv_4='type'
		{
			newLeafNode(otherlv_4, grammarAccess.getFormInputRangeAccess().getTypeKeyword_4());
		}
		otherlv_5=':'
		{
			newLeafNode(otherlv_5, grammarAccess.getFormInputRangeAccess().getColonKeyword_5());
		}
		otherlv_6='RANGE'
		{
			newLeafNode(otherlv_6, grammarAccess.getFormInputRangeAccess().getRANGEKeyword_6());
		}
		otherlv_7=','
		{
			newLeafNode(otherlv_7, grammarAccess.getFormInputRangeAccess().getCommaKeyword_7());
		}
		otherlv_8='min:'
		{
			newLeafNode(otherlv_8, grammarAccess.getFormInputRangeAccess().getMinKeyword_8());
		}
		(
			(
				lv_min_9_0=RULE_INT
				{
					newLeafNode(lv_min_9_0, grammarAccess.getFormInputRangeAccess().getMinINTTerminalRuleCall_9_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFormInputRangeRule());
					}
					setWithLastConsumed(
						$current,
						"min",
						lv_min_9_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_10=','
		{
			newLeafNode(otherlv_10, grammarAccess.getFormInputRangeAccess().getCommaKeyword_10());
		}
		otherlv_11='max:'
		{
			newLeafNode(otherlv_11, grammarAccess.getFormInputRangeAccess().getMaxKeyword_11());
		}
		(
			(
				lv_max_12_0=RULE_INT
				{
					newLeafNode(lv_max_12_0, grammarAccess.getFormInputRangeAccess().getMaxINTTerminalRuleCall_12_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFormInputRangeRule());
					}
					setWithLastConsumed(
						$current,
						"max",
						lv_max_12_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleFormInputSelect
entryRuleFormInputSelect returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFormInputSelectRule()); }
	iv_ruleFormInputSelect=ruleFormInputSelect
	{ $current=$iv_ruleFormInputSelect.current; }
	EOF;

// Rule FormInputSelect
ruleFormInputSelect returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='name'
		{
			newLeafNode(otherlv_0, grammarAccess.getFormInputSelectAccess().getNameKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getFormInputSelectAccess().getColonKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_STRING
				{
					newLeafNode(lv_name_2_0, grammarAccess.getFormInputSelectAccess().getNameSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFormInputSelectRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getFormInputSelectAccess().getCommaKeyword_3());
		}
		otherlv_4='type'
		{
			newLeafNode(otherlv_4, grammarAccess.getFormInputSelectAccess().getTypeKeyword_4());
		}
		otherlv_5=':'
		{
			newLeafNode(otherlv_5, grammarAccess.getFormInputSelectAccess().getColonKeyword_5());
		}
		otherlv_6='SELECT'
		{
			newLeafNode(otherlv_6, grammarAccess.getFormInputSelectAccess().getSELECTKeyword_6());
		}
		otherlv_7=','
		{
			newLeafNode(otherlv_7, grammarAccess.getFormInputSelectAccess().getCommaKeyword_7());
		}
		otherlv_8='options:'
		{
			newLeafNode(otherlv_8, grammarAccess.getFormInputSelectAccess().getOptionsKeyword_8());
		}
		otherlv_9='{'
		{
			newLeafNode(otherlv_9, grammarAccess.getFormInputSelectAccess().getLeftCurlyBracketKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFormInputSelectAccess().getOptionOptionParserRuleCall_10_0());
				}
				lv_option_10_0=ruleOption
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFormInputSelectRule());
					}
					set(
						$current,
						"option",
						lv_option_10_0,
						"cafev.vform.VFormDsl.Option");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getFormInputSelectAccess().getRightCurlyBracketKeyword_11());
		}
	)
;

// Entry rule entryRuleOption
entryRuleOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOptionRule()); }
	iv_ruleOption=ruleOption
	{ $current=$iv_ruleOption.current; }
	EOF;

// Rule Option
ruleOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOptionAccess().getDataOptionParserRuleCall_0());
		}
		this_DataOption_0=ruleDataOption
		{
			$current = $this_DataOption_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOptionAccess().getEnumOptionParserRuleCall_1());
		}
		this_EnumOption_1=ruleEnumOption
		{
			$current = $this_EnumOption_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOptionAccess().getNumberOptionParserRuleCall_2());
		}
		this_NumberOption_2=ruleNumberOption
		{
			$current = $this_NumberOption_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDataOption
entryRuleDataOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataOptionRule()); }
	iv_ruleDataOption=ruleDataOption
	{ $current=$iv_ruleDataOption.current; }
	EOF;

// Rule DataOption
ruleDataOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='optionType:'
		{
			newLeafNode(otherlv_0, grammarAccess.getDataOptionAccess().getOptionTypeKeyword_0());
		}
		otherlv_1='data'
		{
			newLeafNode(otherlv_1, grammarAccess.getDataOptionAccess().getDataKeyword_1());
		}
		otherlv_2=','
		{
			newLeafNode(otherlv_2, grammarAccess.getDataOptionAccess().getCommaKeyword_2());
		}
		otherlv_3='data:'
		{
			newLeafNode(otherlv_3, grammarAccess.getDataOptionAccess().getDataKeyword_3());
		}
		otherlv_4='['
		{
			newLeafNode(otherlv_4, grammarAccess.getDataOptionAccess().getLeftSquareBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataOptionAccess().getDataDataParserRuleCall_5_0());
				}
				lv_data_5_0=ruleData
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataOptionRule());
					}
					add(
						$current,
						"data",
						lv_data_5_0,
						"cafev.vform.VFormDsl.Data");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getDataOptionAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataOptionAccess().getDataDataParserRuleCall_6_1_0());
					}
					lv_data_7_0=ruleData
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataOptionRule());
						}
						add(
							$current,
							"data",
							lv_data_7_0,
							"cafev.vform.VFormDsl.Data");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8=']'
		{
			newLeafNode(otherlv_8, grammarAccess.getDataOptionAccess().getRightSquareBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleEnumOption
entryRuleEnumOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumOptionRule()); }
	iv_ruleEnumOption=ruleEnumOption
	{ $current=$iv_ruleEnumOption.current; }
	EOF;

// Rule EnumOption
ruleEnumOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='optionType:'
		{
			newLeafNode(otherlv_0, grammarAccess.getEnumOptionAccess().getOptionTypeKeyword_0());
		}
		otherlv_1='enum'
		{
			newLeafNode(otherlv_1, grammarAccess.getEnumOptionAccess().getEnumKeyword_1());
		}
		otherlv_2=','
		{
			newLeafNode(otherlv_2, grammarAccess.getEnumOptionAccess().getCommaKeyword_2());
		}
		otherlv_3='data:'
		{
			newLeafNode(otherlv_3, grammarAccess.getEnumOptionAccess().getDataKeyword_3());
		}
		otherlv_4='['
		{
			newLeafNode(otherlv_4, grammarAccess.getEnumOptionAccess().getLeftSquareBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumOptionAccess().getDataOptionItemParserRuleCall_5_0());
				}
				lv_data_5_0=ruleOptionItem
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumOptionRule());
					}
					add(
						$current,
						"data",
						lv_data_5_0,
						"cafev.vform.VFormDsl.OptionItem");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getEnumOptionAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEnumOptionAccess().getDataOptionItemParserRuleCall_6_1_0());
					}
					lv_data_7_0=ruleOptionItem
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEnumOptionRule());
						}
						add(
							$current,
							"data",
							lv_data_7_0,
							"cafev.vform.VFormDsl.OptionItem");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8=']'
		{
			newLeafNode(otherlv_8, grammarAccess.getEnumOptionAccess().getRightSquareBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleNumberOption
entryRuleNumberOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumberOptionRule()); }
	iv_ruleNumberOption=ruleNumberOption
	{ $current=$iv_ruleNumberOption.current; }
	EOF;

// Rule NumberOption
ruleNumberOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='optionType:'
		{
			newLeafNode(otherlv_0, grammarAccess.getNumberOptionAccess().getOptionTypeKeyword_0());
		}
		otherlv_1='number'
		{
			newLeafNode(otherlv_1, grammarAccess.getNumberOptionAccess().getNumberKeyword_1());
		}
		otherlv_2=','
		{
			newLeafNode(otherlv_2, grammarAccess.getNumberOptionAccess().getCommaKeyword_2());
		}
		otherlv_3='min:'
		{
			newLeafNode(otherlv_3, grammarAccess.getNumberOptionAccess().getMinKeyword_3());
		}
		(
			(
				lv_min_4_0=RULE_INT
				{
					newLeafNode(lv_min_4_0, grammarAccess.getNumberOptionAccess().getMinINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNumberOptionRule());
					}
					setWithLastConsumed(
						$current,
						"min",
						lv_min_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getNumberOptionAccess().getCommaKeyword_5());
		}
		otherlv_6='max:'
		{
			newLeafNode(otherlv_6, grammarAccess.getNumberOptionAccess().getMaxKeyword_6());
		}
		(
			(
				lv_max_7_0=RULE_INT
				{
					newLeafNode(lv_max_7_0, grammarAccess.getNumberOptionAccess().getMaxINTTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNumberOptionRule());
					}
					setWithLastConsumed(
						$current,
						"max",
						lv_max_7_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_8=','
		{
			newLeafNode(otherlv_8, grammarAccess.getNumberOptionAccess().getCommaKeyword_8());
		}
		otherlv_9='range:'
		{
			newLeafNode(otherlv_9, grammarAccess.getNumberOptionAccess().getRangeKeyword_9());
		}
		(
			(
				lv_range_10_0=RULE_INT
				{
					newLeafNode(lv_range_10_0, grammarAccess.getNumberOptionAccess().getRangeINTTerminalRuleCall_10_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNumberOptionRule());
					}
					setWithLastConsumed(
						$current,
						"range",
						lv_range_10_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleFormInputSearch
entryRuleFormInputSearch returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFormInputSearchRule()); }
	iv_ruleFormInputSearch=ruleFormInputSearch
	{ $current=$iv_ruleFormInputSearch.current; }
	EOF;

// Rule FormInputSearch
ruleFormInputSearch returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='name'
		{
			newLeafNode(otherlv_0, grammarAccess.getFormInputSearchAccess().getNameKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getFormInputSearchAccess().getColonKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_STRING
				{
					newLeafNode(lv_name_2_0, grammarAccess.getFormInputSearchAccess().getNameSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFormInputSearchRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getFormInputSearchAccess().getCommaKeyword_3());
		}
		otherlv_4='type'
		{
			newLeafNode(otherlv_4, grammarAccess.getFormInputSearchAccess().getTypeKeyword_4());
		}
		otherlv_5=':'
		{
			newLeafNode(otherlv_5, grammarAccess.getFormInputSearchAccess().getColonKeyword_5());
		}
		otherlv_6='SEARCH'
		{
			newLeafNode(otherlv_6, grammarAccess.getFormInputSearchAccess().getSEARCHKeyword_6());
		}
		otherlv_7=','
		{
			newLeafNode(otherlv_7, grammarAccess.getFormInputSearchAccess().getCommaKeyword_7());
		}
		otherlv_8='options:'
		{
			newLeafNode(otherlv_8, grammarAccess.getFormInputSearchAccess().getOptionsKeyword_8());
		}
		otherlv_9='['
		{
			newLeafNode(otherlv_9, grammarAccess.getFormInputSearchAccess().getLeftSquareBracketKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFormInputSearchAccess().getDataOptionItemParserRuleCall_10_0());
				}
				lv_data_10_0=ruleOptionItem
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFormInputSearchRule());
					}
					add(
						$current,
						"data",
						lv_data_10_0,
						"cafev.vform.VFormDsl.OptionItem");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_11=','
			{
				newLeafNode(otherlv_11, grammarAccess.getFormInputSearchAccess().getCommaKeyword_11_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFormInputSearchAccess().getDataOptionItemParserRuleCall_11_1_0());
					}
					lv_data_12_0=ruleOptionItem
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFormInputSearchRule());
						}
						add(
							$current,
							"data",
							lv_data_12_0,
							"cafev.vform.VFormDsl.OptionItem");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_13=']'
		{
			newLeafNode(otherlv_13, grammarAccess.getFormInputSearchAccess().getRightSquareBracketKeyword_12());
		}
	)
;

// Entry rule entryRuleOptionItem
entryRuleOptionItem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOptionItemRule()); }
	iv_ruleOptionItem=ruleOptionItem
	{ $current=$iv_ruleOptionItem.current; }
	EOF;

// Rule OptionItem
ruleOptionItem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOptionItemAccess().getStringOptionItemParserRuleCall_0());
		}
		this_StringOptionItem_0=ruleStringOptionItem
		{
			$current = $this_StringOptionItem_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOptionItemAccess().getIntOptionItemParserRuleCall_1());
		}
		this_IntOptionItem_1=ruleIntOptionItem
		{
			$current = $this_IntOptionItem_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOptionItemAccess().getDataOptionItemParserRuleCall_2());
		}
		this_DataOptionItem_2=ruleDataOptionItem
		{
			$current = $this_DataOptionItem_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStringOptionItem
entryRuleStringOptionItem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringOptionItemRule()); }
	iv_ruleStringOptionItem=ruleStringOptionItem
	{ $current=$iv_ruleStringOptionItem.current; }
	EOF;

// Rule StringOptionItem
ruleStringOptionItem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_STRING
			{
				newLeafNode(lv_value_0_0, grammarAccess.getStringOptionItemAccess().getValueSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStringOptionItemRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Entry rule entryRuleIntOptionItem
entryRuleIntOptionItem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntOptionItemRule()); }
	iv_ruleIntOptionItem=ruleIntOptionItem
	{ $current=$iv_ruleIntOptionItem.current; }
	EOF;

// Rule IntOptionItem
ruleIntOptionItem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_INT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getIntOptionItemAccess().getValueINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getIntOptionItemRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleDataOptionItem
entryRuleDataOptionItem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataOptionItemRule()); }
	iv_ruleDataOptionItem=ruleDataOptionItem
	{ $current=$iv_ruleDataOptionItem.current; }
	EOF;

// Rule DataOptionItem
ruleDataOptionItem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getDataOptionItemAccess().getValueDataParserRuleCall_0());
			}
			lv_value_0_0=ruleData
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getDataOptionItemRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"cafev.vform.VFormDsl.Data");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleFormInputGroup
entryRuleFormInputGroup returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFormInputGroupRule()); }
	iv_ruleFormInputGroup=ruleFormInputGroup
	{ $current=$iv_ruleFormInputGroup.current; }
	EOF;

// Rule FormInputGroup
ruleFormInputGroup returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='name'
		{
			newLeafNode(otherlv_0, grammarAccess.getFormInputGroupAccess().getNameKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getFormInputGroupAccess().getColonKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_STRING
				{
					newLeafNode(lv_name_2_0, grammarAccess.getFormInputGroupAccess().getNameSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFormInputGroupRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getFormInputGroupAccess().getCommaKeyword_3());
		}
		otherlv_4='type:'
		{
			newLeafNode(otherlv_4, grammarAccess.getFormInputGroupAccess().getTypeKeyword_4());
		}
		otherlv_5='GROUP'
		{
			newLeafNode(otherlv_5, grammarAccess.getFormInputGroupAccess().getGROUPKeyword_5());
		}
		otherlv_6=','
		{
			newLeafNode(otherlv_6, grammarAccess.getFormInputGroupAccess().getCommaKeyword_6());
		}
		otherlv_7='groupInputs:'
		{
			newLeafNode(otherlv_7, grammarAccess.getFormInputGroupAccess().getGroupInputsKeyword_7());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFormInputGroupRule());
					}
				}
				otherlv_8=RULE_ID
				{
					newLeafNode(otherlv_8, grammarAccess.getFormInputGroupAccess().getGroupInputsFormInputCrossReference_8_0());
				}
			)
		)
	)
;

// Entry rule entryRuleData
entryRuleData returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataRule()); }
	iv_ruleData=ruleData
	{ $current=$iv_ruleData.current; }
	EOF;

// Rule Data
ruleData returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDataAccess().getStringDataParserRuleCall_0());
		}
		this_StringData_0=ruleStringData
		{
			$current = $this_StringData_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataAccess().getIntDataParserRuleCall_1());
		}
		this_IntData_1=ruleIntData
		{
			$current = $this_IntData_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStringData
entryRuleStringData returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringDataRule()); }
	iv_ruleStringData=ruleStringData
	{ $current=$iv_ruleStringData.current; }
	EOF;

// Rule StringData
ruleStringData returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getStringDataAccess().getLeftCurlyBracketKeyword_0());
		}
		otherlv_1='label:'
		{
			newLeafNode(otherlv_1, grammarAccess.getStringDataAccess().getLabelKeyword_1());
		}
		(
			(
				lv_label_2_0=RULE_STRING
				{
					newLeafNode(lv_label_2_0, grammarAccess.getStringDataAccess().getLabelSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStringDataRule());
					}
					setWithLastConsumed(
						$current,
						"label",
						lv_label_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getStringDataAccess().getCommaKeyword_3());
		}
		otherlv_4='value:'
		{
			newLeafNode(otherlv_4, grammarAccess.getStringDataAccess().getValueKeyword_4());
		}
		(
			(
				lv_value_5_0=RULE_STRING
				{
					newLeafNode(lv_value_5_0, grammarAccess.getStringDataAccess().getValueSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStringDataRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getStringDataAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleIntData
entryRuleIntData returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntDataRule()); }
	iv_ruleIntData=ruleIntData
	{ $current=$iv_ruleIntData.current; }
	EOF;

// Rule IntData
ruleIntData returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getIntDataAccess().getLeftCurlyBracketKeyword_0());
		}
		otherlv_1='label:'
		{
			newLeafNode(otherlv_1, grammarAccess.getIntDataAccess().getLabelKeyword_1());
		}
		(
			(
				lv_label_2_0=RULE_STRING
				{
					newLeafNode(lv_label_2_0, grammarAccess.getIntDataAccess().getLabelSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntDataRule());
					}
					setWithLastConsumed(
						$current,
						"label",
						lv_label_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getIntDataAccess().getCommaKeyword_3());
		}
		otherlv_4='value:'
		{
			newLeafNode(otherlv_4, grammarAccess.getIntDataAccess().getValueKeyword_4());
		}
		(
			(
				lv_value_5_0=RULE_INT
				{
					newLeafNode(lv_value_5_0, grammarAccess.getIntDataAccess().getValueINTTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntDataRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_5_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getIntDataAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Rule BasicInputType
ruleBasicInputType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='TEXT'
			{
				$current = grammarAccess.getBasicInputTypeAccess().getTEXTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getBasicInputTypeAccess().getTEXTEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='CHECKBOX'
			{
				$current = grammarAccess.getBasicInputTypeAccess().getCHECKBOXEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getBasicInputTypeAccess().getCHECKBOXEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='NUMBER'
			{
				$current = grammarAccess.getBasicInputTypeAccess().getNUMBEREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getBasicInputTypeAccess().getNUMBEREnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule Layout
ruleLayout returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='horizontal'
			{
				$current = grammarAccess.getLayoutAccess().getHorizontalEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getLayoutAccess().getHorizontalEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='vertical'
			{
				$current = grammarAccess.getLayoutAccess().getVerticalEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getLayoutAccess().getVerticalEnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
