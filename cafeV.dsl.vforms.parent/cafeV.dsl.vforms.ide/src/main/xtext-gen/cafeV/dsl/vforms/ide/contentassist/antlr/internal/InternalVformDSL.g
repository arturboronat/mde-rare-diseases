/*
 * generated by Xtext 2.25.0
 */
grammar InternalVformDSL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package cafeV.dsl.vforms.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package cafeV.dsl.vforms.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import cafeV.dsl.vforms.services.VformDSLGrammarAccess;

}
@parser::members {
	private VformDSLGrammarAccess grammarAccess;

	public void setGrammarAccess(VformDSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFormInput
entryRuleFormInput
:
{ before(grammarAccess.getFormInputRule()); }
	 ruleFormInput
{ after(grammarAccess.getFormInputRule()); } 
	 EOF 
;

// Rule FormInput
ruleFormInput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFormInputAccess().getAlternatives()); }
		(rule__FormInput__Alternatives)*
		{ after(grammarAccess.getFormInputAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFormLayout
entryRuleFormLayout
:
{ before(grammarAccess.getFormLayoutRule()); }
	 ruleFormLayout
{ after(grammarAccess.getFormLayoutRule()); } 
	 EOF 
;

// Rule FormLayout
ruleFormLayout 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFormLayoutAccess().getLayoutAssignment()); }
		(rule__FormLayout__LayoutAssignment)
		{ after(grammarAccess.getFormLayoutAccess().getLayoutAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleText
entryRuleText
:
{ before(grammarAccess.getTextRule()); }
	 ruleText
{ after(grammarAccess.getTextRule()); } 
	 EOF 
;

// Rule Text
ruleText 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTextAccess().getGroup()); }
		(rule__Text__Group__0)
		{ after(grammarAccess.getTextAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCheckbox
entryRuleCheckbox
:
{ before(grammarAccess.getCheckboxRule()); }
	 ruleCheckbox
{ after(grammarAccess.getCheckboxRule()); } 
	 EOF 
;

// Rule Checkbox
ruleCheckbox 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCheckboxAccess().getGroup()); }
		(rule__Checkbox__Group__0)
		{ after(grammarAccess.getCheckboxAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumber
entryRuleNumber
:
{ before(grammarAccess.getNumberRule()); }
	 ruleNumber
{ after(grammarAccess.getNumberRule()); } 
	 EOF 
;

// Rule Number
ruleNumber 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberAccess().getGroup()); }
		(rule__Number__Group__0)
		{ after(grammarAccess.getNumberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDat
entryRuleDat
:
{ before(grammarAccess.getDatRule()); }
	 ruleDat
{ after(grammarAccess.getDatRule()); } 
	 EOF 
;

// Rule Dat
ruleDat 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDatAccess().getGroup()); }
		(rule__Dat__Group__0)
		{ after(grammarAccess.getDatAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRange
entryRuleRange
:
{ before(grammarAccess.getRangeRule()); }
	 ruleRange
{ after(grammarAccess.getRangeRule()); } 
	 EOF 
;

// Rule Range
ruleRange 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRangeAccess().getGroup()); }
		(rule__Range__Group__0)
		{ after(grammarAccess.getRangeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelect
entryRuleSelect
:
{ before(grammarAccess.getSelectRule()); }
	 ruleSelect
{ after(grammarAccess.getSelectRule()); } 
	 EOF 
;

// Rule Select
ruleSelect 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectAccess().getGroup()); }
		(rule__Select__Group__0)
		{ after(grammarAccess.getSelectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataOption
entryRuleDataOption
:
{ before(grammarAccess.getDataOptionRule()); }
	 ruleDataOption
{ after(grammarAccess.getDataOptionRule()); } 
	 EOF 
;

// Rule DataOption
ruleDataOption 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataOptionAccess().getGroup()); }
		(rule__DataOption__Group__0)
		{ after(grammarAccess.getDataOptionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleData
entryRuleData
:
{ before(grammarAccess.getDataRule()); }
	 ruleData
{ after(grammarAccess.getDataRule()); } 
	 EOF 
;

// Rule Data
ruleData 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataAccess().getAlternatives()); }
		(rule__Data__Alternatives)
		{ after(grammarAccess.getDataAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumberOption
entryRuleNumberOption
:
{ before(grammarAccess.getNumberOptionRule()); }
	 ruleNumberOption
{ after(grammarAccess.getNumberOptionRule()); } 
	 EOF 
;

// Rule NumberOption
ruleNumberOption 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberOptionAccess().getGroup()); }
		(rule__NumberOption__Group__0)
		{ after(grammarAccess.getNumberOptionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumOption
entryRuleEnumOption
:
{ before(grammarAccess.getEnumOptionRule()); }
	 ruleEnumOption
{ after(grammarAccess.getEnumOptionRule()); } 
	 EOF 
;

// Rule EnumOption
ruleEnumOption 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumOptionAccess().getAlternatives()); }
		(rule__EnumOption__Alternatives)
		{ after(grammarAccess.getEnumOptionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Layout
ruleLayout
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLayoutAccess().getAlternatives()); }
		(rule__Layout__Alternatives)
		{ after(grammarAccess.getLayoutAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormInput__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormInputAccess().getTextAssignment_0()); }
		(rule__FormInput__TextAssignment_0)
		{ after(grammarAccess.getFormInputAccess().getTextAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getFormInputAccess().getCheckboxAssignment_1()); }
		(rule__FormInput__CheckboxAssignment_1)
		{ after(grammarAccess.getFormInputAccess().getCheckboxAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getFormInputAccess().getNumberAssignment_2()); }
		(rule__FormInput__NumberAssignment_2)
		{ after(grammarAccess.getFormInputAccess().getNumberAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getFormInputAccess().getDatAssignment_3()); }
		(rule__FormInput__DatAssignment_3)
		{ after(grammarAccess.getFormInputAccess().getDatAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getFormInputAccess().getRangeAssignment_4()); }
		(rule__FormInput__RangeAssignment_4)
		{ after(grammarAccess.getFormInputAccess().getRangeAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getFormInputAccess().getSelectAssignment_5()); }
		(rule__FormInput__SelectAssignment_5)
		{ after(grammarAccess.getFormInputAccess().getSelectAssignment_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Alternatives_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getDataOptionAssignment_5_0()); }
		(rule__Select__DataOptionAssignment_5_0)
		{ after(grammarAccess.getSelectAccess().getDataOptionAssignment_5_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelectAccess().getNumberOptionAssignment_5_1()); }
		(rule__Select__NumberOptionAssignment_5_1)
		{ after(grammarAccess.getSelectAccess().getNumberOptionAssignment_5_1()); }
	)
	|
	(
		{ before(grammarAccess.getSelectAccess().getEnumOptionAssignment_5_2()); }
		(rule__Select__EnumOptionAssignment_5_2)
		{ after(grammarAccess.getSelectAccess().getEnumOptionAssignment_5_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataAccess().getGroup_0()); }
		(rule__Data__Group_0__0)
		{ after(grammarAccess.getDataAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataAccess().getIntValAssignment_1()); }
		(rule__Data__IntValAssignment_1)
		{ after(grammarAccess.getDataAccess().getIntValAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumOption__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumOptionAccess().getGroup_0()); }
		(rule__EnumOption__Group_0__0)
		{ after(grammarAccess.getEnumOptionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getEnumOptionAccess().getNumberDataAssignment_1()); }
		(rule__EnumOption__NumberDataAssignment_1)*
		{ after(grammarAccess.getEnumOptionAccess().getNumberDataAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLayoutAccess().getHorizontalEnumLiteralDeclaration_0()); }
		('horizontal')
		{ after(grammarAccess.getLayoutAccess().getHorizontalEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getLayoutAccess().getVerticalEnumLiteralDeclaration_1()); }
		('vertical')
		{ after(grammarAccess.getLayoutAccess().getVerticalEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getGroup_0()); }
	(rule__Model__Group_0__0)
	{ after(grammarAccess.getModelAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getFormInputsKeyword_1()); }
	'formInputs'
	{ after(grammarAccess.getModelAccess().getFormInputsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getFormInputAssignment_2()); }
	(rule__Model__FormInputAssignment_2)
	{ after(grammarAccess.getModelAccess().getFormInputAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_0__0__Impl
	rule__Model__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getFormLayoutKeyword_0_0()); }
	'formLayout'
	{ after(grammarAccess.getModelAccess().getFormLayoutKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getFormLayoutAssignment_0_1()); }
	(rule__Model__FormLayoutAssignment_0_1)
	{ after(grammarAccess.getModelAccess().getFormLayoutAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Text__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group__0__Impl
	rule__Text__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getInputTypeKeyword_0()); }
	'inputType'
	{ after(grammarAccess.getTextAccess().getInputTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group__1__Impl
	rule__Text__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getTextKeyword_1()); }
	'text'
	{ after(grammarAccess.getTextAccess().getTextKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group__2__Impl
	rule__Text__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getInputNameKeyword_2()); }
	'inputName'
	{ after(grammarAccess.getTextAccess().getInputNameKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getInputNameAssignment_3()); }
	(rule__Text__InputNameAssignment_3)
	{ after(grammarAccess.getTextAccess().getInputNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Checkbox__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Checkbox__Group__0__Impl
	rule__Checkbox__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckboxAccess().getInputTypeKeyword_0()); }
	'inputType'
	{ after(grammarAccess.getCheckboxAccess().getInputTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Checkbox__Group__1__Impl
	rule__Checkbox__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckboxAccess().getCheckboxKeyword_1()); }
	'checkbox'
	{ after(grammarAccess.getCheckboxAccess().getCheckboxKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Checkbox__Group__2__Impl
	rule__Checkbox__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckboxAccess().getInputNameKeyword_2()); }
	'inputName'
	{ after(grammarAccess.getCheckboxAccess().getInputNameKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Checkbox__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckboxAccess().getInputNameAssignment_3()); }
	(rule__Checkbox__InputNameAssignment_3)
	{ after(grammarAccess.getCheckboxAccess().getInputNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group__0__Impl
	rule__Number__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getInputTypeKeyword_0()); }
	'inputType'
	{ after(grammarAccess.getNumberAccess().getInputTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group__1__Impl
	rule__Number__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getNumberKeyword_1()); }
	'number'
	{ after(grammarAccess.getNumberAccess().getNumberKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group__2__Impl
	rule__Number__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getInputNameKeyword_2()); }
	'inputName'
	{ after(grammarAccess.getNumberAccess().getInputNameKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getInputNameAssignment_3()); }
	(rule__Number__InputNameAssignment_3)
	{ after(grammarAccess.getNumberAccess().getInputNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Dat__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dat__Group__0__Impl
	rule__Dat__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dat__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDatAccess().getInputTypeKeyword_0()); }
	'inputType'
	{ after(grammarAccess.getDatAccess().getInputTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dat__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dat__Group__1__Impl
	rule__Dat__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Dat__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDatAccess().getDateKeyword_1()); }
	'date'
	{ after(grammarAccess.getDatAccess().getDateKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dat__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dat__Group__2__Impl
	rule__Dat__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Dat__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDatAccess().getInputNameKeyword_2()); }
	'inputName'
	{ after(grammarAccess.getDatAccess().getInputNameKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dat__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dat__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dat__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDatAccess().getInputNameAssignment_3()); }
	(rule__Dat__InputNameAssignment_3)
	{ after(grammarAccess.getDatAccess().getInputNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Range__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Range__Group__0__Impl
	rule__Range__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeAccess().getInputTypeKeyword_0()); }
	'inputType'
	{ after(grammarAccess.getRangeAccess().getInputTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Range__Group__1__Impl
	rule__Range__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeAccess().getRangeKeyword_1()); }
	'range'
	{ after(grammarAccess.getRangeAccess().getRangeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Range__Group__2__Impl
	rule__Range__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeAccess().getInputNameKeyword_2()); }
	'inputName'
	{ after(grammarAccess.getRangeAccess().getInputNameKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Range__Group__3__Impl
	rule__Range__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeAccess().getInputNameAssignment_3()); }
	(rule__Range__InputNameAssignment_3)
	{ after(grammarAccess.getRangeAccess().getInputNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Range__Group__4__Impl
	rule__Range__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeAccess().getMinKeyword_4()); }
	'min'
	{ after(grammarAccess.getRangeAccess().getMinKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Range__Group__5__Impl
	rule__Range__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeAccess().getMinAssignment_5()); }
	(rule__Range__MinAssignment_5)
	{ after(grammarAccess.getRangeAccess().getMinAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Range__Group__6__Impl
	rule__Range__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeAccess().getMaxKeyword_6()); }
	'max'
	{ after(grammarAccess.getRangeAccess().getMaxKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Range__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeAccess().getMaxAssignment_7()); }
	(rule__Range__MaxAssignment_7)
	{ after(grammarAccess.getRangeAccess().getMaxAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__0__Impl
	rule__Select__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getInputTypeKeyword_0()); }
	'inputType'
	{ after(grammarAccess.getSelectAccess().getInputTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__1__Impl
	rule__Select__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getSelectKeyword_1()); }
	'select'
	{ after(grammarAccess.getSelectAccess().getSelectKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__2__Impl
	rule__Select__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getInputNameKeyword_2()); }
	'inputName'
	{ after(grammarAccess.getSelectAccess().getInputNameKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__3__Impl
	rule__Select__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getInputNameAssignment_3()); }
	(rule__Select__InputNameAssignment_3)
	{ after(grammarAccess.getSelectAccess().getInputNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__4__Impl
	rule__Select__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getOptionsKeyword_4()); }
	'options'
	{ after(grammarAccess.getSelectAccess().getOptionsKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getAlternatives_5()); }
	(rule__Select__Alternatives_5)
	{ after(grammarAccess.getSelectAccess().getAlternatives_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataOption__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataOption__Group__0__Impl
	rule__DataOption__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataOption__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataOptionAccess().getOptionTypeKeyword_0()); }
	'optionType'
	{ after(grammarAccess.getDataOptionAccess().getOptionTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataOption__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataOption__Group__1__Impl
	rule__DataOption__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataOption__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataOptionAccess().getDataKeyword_1()); }
	'data'
	{ after(grammarAccess.getDataOptionAccess().getDataKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataOption__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataOption__Group__2__Impl
	rule__DataOption__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataOption__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataOptionAccess().getDataKeyword_2()); }
	'data'
	{ after(grammarAccess.getDataOptionAccess().getDataKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataOption__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataOption__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataOption__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataOptionAccess().getDataAssignment_3()); }
	(rule__DataOption__DataAssignment_3)*
	{ after(grammarAccess.getDataOptionAccess().getDataAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Data__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Data__Group_0__0__Impl
	rule__Data__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataAccess().getLabelKeyword_0_0()); }
	'label'
	{ after(grammarAccess.getDataAccess().getLabelKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Data__Group_0__1__Impl
	rule__Data__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataAccess().getLabelAssignment_0_1()); }
	(rule__Data__LabelAssignment_0_1)
	{ after(grammarAccess.getDataAccess().getLabelAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Data__Group_0__2__Impl
	rule__Data__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataAccess().getValueKeyword_0_2()); }
	'value'
	{ after(grammarAccess.getDataAccess().getValueKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Data__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataAccess().getStrValAssignment_0_3()); }
	(rule__Data__StrValAssignment_0_3)
	{ after(grammarAccess.getDataAccess().getStrValAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NumberOption__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberOption__Group__0__Impl
	rule__NumberOption__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberOption__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberOptionAccess().getOptionTypeKeyword_0()); }
	'optionType'
	{ after(grammarAccess.getNumberOptionAccess().getOptionTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberOption__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberOption__Group__1__Impl
	rule__NumberOption__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberOption__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberOptionAccess().getNumberKeyword_1()); }
	'number'
	{ after(grammarAccess.getNumberOptionAccess().getNumberKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberOption__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberOption__Group__2__Impl
	rule__NumberOption__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberOption__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberOptionAccess().getMinKeyword_2()); }
	'min'
	{ after(grammarAccess.getNumberOptionAccess().getMinKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberOption__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberOption__Group__3__Impl
	rule__NumberOption__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberOption__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberOptionAccess().getMinAssignment_3()); }
	(rule__NumberOption__MinAssignment_3)
	{ after(grammarAccess.getNumberOptionAccess().getMinAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberOption__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberOption__Group__4__Impl
	rule__NumberOption__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberOption__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberOptionAccess().getMaxKeyword_4()); }
	'max'
	{ after(grammarAccess.getNumberOptionAccess().getMaxKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberOption__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberOption__Group__5__Impl
	rule__NumberOption__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberOption__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberOptionAccess().getMaxAssignment_5()); }
	(rule__NumberOption__MaxAssignment_5)
	{ after(grammarAccess.getNumberOptionAccess().getMaxAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberOption__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberOption__Group__6__Impl
	rule__NumberOption__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberOption__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberOptionAccess().getRangeKeyword_6()); }
	'range'
	{ after(grammarAccess.getNumberOptionAccess().getRangeKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberOption__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberOption__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberOption__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberOptionAccess().getRangeAssignment_7()); }
	(rule__NumberOption__RangeAssignment_7)
	{ after(grammarAccess.getNumberOptionAccess().getRangeAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumOption__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumOption__Group_0__0__Impl
	rule__EnumOption__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumOption__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumOptionAccess().getOptionTypeKeyword_0_0()); }
	'optionType'
	{ after(grammarAccess.getEnumOptionAccess().getOptionTypeKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumOption__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumOption__Group_0__1__Impl
	rule__EnumOption__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumOption__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumOptionAccess().getEnumKeyword_0_1()); }
	'enum'
	{ after(grammarAccess.getEnumOptionAccess().getEnumKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumOption__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumOption__Group_0__2__Impl
	rule__EnumOption__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumOption__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumOptionAccess().getDataKeyword_0_2()); }
	'data'
	{ after(grammarAccess.getEnumOptionAccess().getDataKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumOption__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumOption__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumOption__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumOptionAccess().getStringDataAssignment_0_3()); }
	(rule__EnumOption__StringDataAssignment_0_3)*
	{ after(grammarAccess.getEnumOptionAccess().getStringDataAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__FormLayoutAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getFormLayoutFormLayoutParserRuleCall_0_1_0()); }
		ruleFormLayout
		{ after(grammarAccess.getModelAccess().getFormLayoutFormLayoutParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__FormInputAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getFormInputFormInputParserRuleCall_2_0()); }
		ruleFormInput
		{ after(grammarAccess.getModelAccess().getFormInputFormInputParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormInput__TextAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormInputAccess().getTextTextParserRuleCall_0_0()); }
		ruleText
		{ after(grammarAccess.getFormInputAccess().getTextTextParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormInput__CheckboxAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormInputAccess().getCheckboxCheckboxParserRuleCall_1_0()); }
		ruleCheckbox
		{ after(grammarAccess.getFormInputAccess().getCheckboxCheckboxParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormInput__NumberAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormInputAccess().getNumberNumberParserRuleCall_2_0()); }
		ruleNumber
		{ after(grammarAccess.getFormInputAccess().getNumberNumberParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormInput__DatAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormInputAccess().getDatDatParserRuleCall_3_0()); }
		ruleDat
		{ after(grammarAccess.getFormInputAccess().getDatDatParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormInput__RangeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormInputAccess().getRangeRangeParserRuleCall_4_0()); }
		ruleRange
		{ after(grammarAccess.getFormInputAccess().getRangeRangeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormInput__SelectAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormInputAccess().getSelectSelectParserRuleCall_5_0()); }
		ruleSelect
		{ after(grammarAccess.getFormInputAccess().getSelectSelectParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormLayout__LayoutAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormLayoutAccess().getLayoutLayoutEnumRuleCall_0()); }
		ruleLayout
		{ after(grammarAccess.getFormLayoutAccess().getLayoutLayoutEnumRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__InputNameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextAccess().getInputNameSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getTextAccess().getInputNameSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__InputNameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckboxAccess().getInputNameSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getCheckboxAccess().getInputNameSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__InputNameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getInputNameSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getNumberAccess().getInputNameSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dat__InputNameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDatAccess().getInputNameSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getDatAccess().getInputNameSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__InputNameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeAccess().getInputNameSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getRangeAccess().getInputNameSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__MinAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeAccess().getMinINTTerminalRuleCall_5_0()); }
		RULE_INT
		{ after(grammarAccess.getRangeAccess().getMinINTTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__MaxAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeAccess().getMaxINTTerminalRuleCall_7_0()); }
		RULE_INT
		{ after(grammarAccess.getRangeAccess().getMaxINTTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__InputNameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getInputNameSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getSelectAccess().getInputNameSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__DataOptionAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getDataOptionDataOptionParserRuleCall_5_0_0()); }
		ruleDataOption
		{ after(grammarAccess.getSelectAccess().getDataOptionDataOptionParserRuleCall_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__NumberOptionAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getNumberOptionNumberOptionParserRuleCall_5_1_0()); }
		ruleNumberOption
		{ after(grammarAccess.getSelectAccess().getNumberOptionNumberOptionParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__EnumOptionAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getEnumOptionEnumOptionParserRuleCall_5_2_0()); }
		ruleEnumOption
		{ after(grammarAccess.getSelectAccess().getEnumOptionEnumOptionParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataOption__DataAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataOptionAccess().getDataDataParserRuleCall_3_0()); }
		ruleData
		{ after(grammarAccess.getDataOptionAccess().getDataDataParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__LabelAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataAccess().getLabelSTRINGTerminalRuleCall_0_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getDataAccess().getLabelSTRINGTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__StrValAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataAccess().getStrValSTRINGTerminalRuleCall_0_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getDataAccess().getStrValSTRINGTerminalRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__IntValAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataAccess().getIntValINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getDataAccess().getIntValINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberOption__MinAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberOptionAccess().getMinINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getNumberOptionAccess().getMinINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberOption__MaxAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberOptionAccess().getMaxINTTerminalRuleCall_5_0()); }
		RULE_INT
		{ after(grammarAccess.getNumberOptionAccess().getMaxINTTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberOption__RangeAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberOptionAccess().getRangeINTTerminalRuleCall_7_0()); }
		RULE_INT
		{ after(grammarAccess.getNumberOptionAccess().getRangeINTTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumOption__StringDataAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumOptionAccess().getStringDataSTRINGTerminalRuleCall_0_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getEnumOptionAccess().getStringDataSTRINGTerminalRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumOption__NumberDataAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumOptionAccess().getNumberDataSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getEnumOptionAccess().getNumberDataSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
