/*
 * generated by Xtext 2.25.0
 */
package cafeV.dsl.vforms.ide.contentassist.antlr;

import cafeV.dsl.vforms.ide.contentassist.antlr.internal.InternalVformDSLParser;
import cafeV.dsl.vforms.services.VformDSLGrammarAccess;
import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class VformDSLParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(VformDSLGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, VformDSLGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getFormInputAccess().getAlternatives(), "rule__FormInput__Alternatives");
			builder.put(grammarAccess.getSelectAccess().getAlternatives_8(), "rule__Select__Alternatives_8");
			builder.put(grammarAccess.getSearchAccess().getAlternatives_9(), "rule__Search__Alternatives_9");
			builder.put(grammarAccess.getEnumOptionAccess().getAlternatives_6(), "rule__EnumOption__Alternatives_6");
			builder.put(grammarAccess.getDataAccess().getAlternatives_5(), "rule__Data__Alternatives_5");
			builder.put(grammarAccess.getLayoutAccess().getAlternatives(), "rule__Layout__Alternatives");
			builder.put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
			builder.put(grammarAccess.getTextAccess().getGroup(), "rule__Text__Group__0");
			builder.put(grammarAccess.getCheckboxAccess().getGroup(), "rule__Checkbox__Group__0");
			builder.put(grammarAccess.getNumberAccess().getGroup(), "rule__Number__Group__0");
			builder.put(grammarAccess.getDatAccess().getGroup(), "rule__Dat__Group__0");
			builder.put(grammarAccess.getRangeAccess().getGroup(), "rule__Range__Group__0");
			builder.put(grammarAccess.getSelectAccess().getGroup(), "rule__Select__Group__0");
			builder.put(grammarAccess.getSearchAccess().getGroup(), "rule__Search__Group__0");
			builder.put(grammarAccess.getGroupAccess().getGroup(), "rule__Group__Group__0");
			builder.put(grammarAccess.getDataOptionAccess().getGroup(), "rule__DataOption__Group__0");
			builder.put(grammarAccess.getEnumOptionAccess().getGroup(), "rule__EnumOption__Group__0");
			builder.put(grammarAccess.getNumberOptionAccess().getGroup(), "rule__NumberOption__Group__0");
			builder.put(grammarAccess.getDataAccess().getGroup(), "rule__Data__Group__0");
			builder.put(grammarAccess.getModelAccess().getFormLayoutAssignment_1(), "rule__Model__FormLayoutAssignment_1");
			builder.put(grammarAccess.getModelAccess().getFormInputAssignment_5(), "rule__Model__FormInputAssignment_5");
			builder.put(grammarAccess.getFormLayoutAccess().getLayoutAssignment(), "rule__FormLayout__LayoutAssignment");
			builder.put(grammarAccess.getFormInputAccess().getTextAssignment_0(), "rule__FormInput__TextAssignment_0");
			builder.put(grammarAccess.getFormInputAccess().getCheckboxAssignment_1(), "rule__FormInput__CheckboxAssignment_1");
			builder.put(grammarAccess.getFormInputAccess().getNumberAssignment_2(), "rule__FormInput__NumberAssignment_2");
			builder.put(grammarAccess.getFormInputAccess().getDatAssignment_3(), "rule__FormInput__DatAssignment_3");
			builder.put(grammarAccess.getFormInputAccess().getRangeAssignment_4(), "rule__FormInput__RangeAssignment_4");
			builder.put(grammarAccess.getFormInputAccess().getSelectAssignment_5(), "rule__FormInput__SelectAssignment_5");
			builder.put(grammarAccess.getFormInputAccess().getSearchAssignment_6(), "rule__FormInput__SearchAssignment_6");
			builder.put(grammarAccess.getFormInputAccess().getGroupAssignment_7(), "rule__FormInput__GroupAssignment_7");
			builder.put(grammarAccess.getTextAccess().getInputNameAssignment_5(), "rule__Text__InputNameAssignment_5");
			builder.put(grammarAccess.getCheckboxAccess().getInputNameAssignment_5(), "rule__Checkbox__InputNameAssignment_5");
			builder.put(grammarAccess.getNumberAccess().getInputNameAssignment_5(), "rule__Number__InputNameAssignment_5");
			builder.put(grammarAccess.getDatAccess().getInputNameAssignment_5(), "rule__Dat__InputNameAssignment_5");
			builder.put(grammarAccess.getRangeAccess().getInputNameAssignment_5(), "rule__Range__InputNameAssignment_5");
			builder.put(grammarAccess.getRangeAccess().getMinAssignment_8(), "rule__Range__MinAssignment_8");
			builder.put(grammarAccess.getRangeAccess().getMaxAssignment_11(), "rule__Range__MaxAssignment_11");
			builder.put(grammarAccess.getSelectAccess().getInputNameAssignment_5(), "rule__Select__InputNameAssignment_5");
			builder.put(grammarAccess.getSelectAccess().getDataOptionAssignment_8_0(), "rule__Select__DataOptionAssignment_8_0");
			builder.put(grammarAccess.getSelectAccess().getEnumOptionAssignment_8_1(), "rule__Select__EnumOptionAssignment_8_1");
			builder.put(grammarAccess.getSelectAccess().getNumberOptionAssignment_8_2(), "rule__Select__NumberOptionAssignment_8_2");
			builder.put(grammarAccess.getSearchAccess().getInputNameAssignment_5(), "rule__Search__InputNameAssignment_5");
			builder.put(grammarAccess.getSearchAccess().getStringDataAssignment_9_0(), "rule__Search__StringDataAssignment_9_0");
			builder.put(grammarAccess.getSearchAccess().getNumberDataAssignment_9_1(), "rule__Search__NumberDataAssignment_9_1");
			builder.put(grammarAccess.getSearchAccess().getDataAssignment_9_2(), "rule__Search__DataAssignment_9_2");
			builder.put(grammarAccess.getGroupAccess().getInputNameAssignment_5(), "rule__Group__InputNameAssignment_5");
			builder.put(grammarAccess.getGroupAccess().getGroupInputsAssignment_8(), "rule__Group__GroupInputsAssignment_8");
			builder.put(grammarAccess.getDataOptionAccess().getDataAssignment_6(), "rule__DataOption__DataAssignment_6");
			builder.put(grammarAccess.getEnumOptionAccess().getStringDataAssignment_6_0(), "rule__EnumOption__StringDataAssignment_6_0");
			builder.put(grammarAccess.getEnumOptionAccess().getNumberDataAssignment_6_1(), "rule__EnumOption__NumberDataAssignment_6_1");
			builder.put(grammarAccess.getNumberOptionAccess().getMinAssignment_5(), "rule__NumberOption__MinAssignment_5");
			builder.put(grammarAccess.getNumberOptionAccess().getMaxAssignment_8(), "rule__NumberOption__MaxAssignment_8");
			builder.put(grammarAccess.getNumberOptionAccess().getRangeAssignment_11(), "rule__NumberOption__RangeAssignment_11");
			builder.put(grammarAccess.getDataAccess().getLabelAssignment_2(), "rule__Data__LabelAssignment_2");
			builder.put(grammarAccess.getDataAccess().getStrValAssignment_5_0(), "rule__Data__StrValAssignment_5_0");
			builder.put(grammarAccess.getDataAccess().getIntValAssignment_5_1(), "rule__Data__IntValAssignment_5_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private VformDSLGrammarAccess grammarAccess;

	@Override
	protected InternalVformDSLParser createParser() {
		InternalVformDSLParser result = new InternalVformDSLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public VformDSLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(VformDSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
